
BobCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00001110  000011a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001110  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800114  00800114  000011b8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001214  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00001254  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001706  00000000  00000000  000013f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d09  00000000  00000000  00002afa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c76  00000000  00000000  00003803  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  0000447c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000784  00000000  00000000  000047d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000911  00000000  00000000  00004f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00005869  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	c8 00       	.word	0x00c8	; ????
      6a:	d4 00       	.word	0x00d4	; ????
      6c:	c2 00       	.word	0x00c2	; ????
      6e:	d6 00       	.word	0x00d6	; ????
      70:	c4 00       	.word	0x00c4	; ????
      72:	d4 00       	.word	0x00d4	; ????
      74:	d4 00       	.word	0x00d4	; ????
      76:	cc 00       	.word	0x00cc	; ????
      78:	d4 00       	.word	0x00d4	; ????
      7a:	d4 00       	.word	0x00d4	; ????
      7c:	ce 00       	.word	0x00ce	; ????
      7e:	d4 00       	.word	0x00d4	; ????
      80:	d4 00       	.word	0x00d4	; ????
      82:	d4 00       	.word	0x00d4	; ????
      84:	c0 00       	.word	0x00c0	; ????
      86:	d4 00       	.word	0x00d4	; ????
      88:	ca 00       	.word	0x00ca	; ????
      8a:	d4 00       	.word	0x00d4	; ????
      8c:	d4 00       	.word	0x00d4	; ????
      8e:	d4 00       	.word	0x00d4	; ????
      90:	d4 00       	.word	0x00d4	; ????
      92:	d2 00       	.word	0x00d2	; ????
      94:	d4 00       	.word	0x00d4	; ????
      96:	c6 00       	.word	0x00c6	; ????
      98:	d4 00       	.word	0x00d4	; ????
      9a:	d4 00       	.word	0x00d4	; ????
      9c:	d4 00       	.word	0x00d4	; ????
      9e:	d4 00       	.word	0x00d4	; ????
      a0:	d4 00       	.word	0x00d4	; ????
      a2:	d4 00       	.word	0x00d4	; ????
      a4:	d4 00       	.word	0x00d4	; ????
      a6:	d4 00       	.word	0x00d4	; ????
      a8:	d4 00       	.word	0x00d4	; ????
      aa:	d4 00       	.word	0x00d4	; ????
      ac:	d4 00       	.word	0x00d4	; ????
      ae:	d4 00       	.word	0x00d4	; ????
      b0:	d4 00       	.word	0x00d4	; ????
      b2:	d4 00       	.word	0x00d4	; ????
      b4:	d4 00       	.word	0x00d4	; ????
      b6:	d4 00       	.word	0x00d4	; ????
      b8:	d4 00       	.word	0x00d4	; ????
      ba:	d4 00       	.word	0x00d4	; ????
      bc:	d0 00       	.word	0x00d0	; ????
      be:	b1 01       	movw	r22, r2
      c0:	b6 01       	movw	r22, r12
      c2:	bb 01       	movw	r22, r22
      c4:	c0 01       	movw	r24, r0
      c6:	c5 01       	movw	r24, r10
      c8:	ca 01       	movw	r24, r20
      ca:	cf 01       	movw	r24, r30

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e0 e1       	ldi	r30, 0x10	; 16
      e0:	f1 e1       	ldi	r31, 0x11	; 17
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a4 31       	cpi	r26, 0x14	; 20
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	a4 e1       	ldi	r26, 0x14	; 20
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a8 31       	cpi	r26, 0x18	; 24
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 f7 00 	call	0x1ee	; 0x1ee <main>
     102:	0c 94 86 08 	jmp	0x110c	; 0x110c <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <CTRL_SendDistance>:

void CTRL_SendTemp(unsigned int temperature){
	char message[15];
	sprintf(message, "T%u\n", temperature);
	UART_putstring(&message[0]);
}
     10a:	0f 93       	push	r16
     10c:	1f 93       	push	r17
     10e:	cf 93       	push	r28
     110:	df 93       	push	r29
     112:	cd b7       	in	r28, 0x3d	; 61
     114:	de b7       	in	r29, 0x3e	; 62
     116:	2f 97       	sbiw	r28, 0x0f	; 15
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	f8 94       	cli
     11c:	de bf       	out	0x3e, r29	; 62
     11e:	0f be       	out	0x3f, r0	; 63
     120:	cd bf       	out	0x3d, r28	; 61
     122:	9f 93       	push	r25
     124:	8f 93       	push	r24
     126:	7f 93       	push	r23
     128:	6f 93       	push	r22
     12a:	88 e0       	ldi	r24, 0x08	; 8
     12c:	91 e0       	ldi	r25, 0x01	; 1
     12e:	9f 93       	push	r25
     130:	8f 93       	push	r24
     132:	8e 01       	movw	r16, r28
     134:	0f 5f       	subi	r16, 0xFF	; 255
     136:	1f 4f       	sbci	r17, 0xFF	; 255
     138:	1f 93       	push	r17
     13a:	0f 93       	push	r16
     13c:	0e 94 9c 05 	call	0xb38	; 0xb38 <sprintf>
     140:	c8 01       	movw	r24, r16
     142:	0e 94 11 03 	call	0x622	; 0x622 <UART_putstring>
     146:	0f b6       	in	r0, 0x3f	; 63
     148:	f8 94       	cli
     14a:	de bf       	out	0x3e, r29	; 62
     14c:	0f be       	out	0x3f, r0	; 63
     14e:	cd bf       	out	0x3d, r28	; 61
     150:	2f 96       	adiw	r28, 0x0f	; 15
     152:	0f b6       	in	r0, 0x3f	; 63
     154:	f8 94       	cli
     156:	de bf       	out	0x3e, r29	; 62
     158:	0f be       	out	0x3f, r0	; 63
     15a:	cd bf       	out	0x3d, r28	; 61
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	08 95       	ret

00000166 <CTRL_GetCommand>:

enum commands CTRL_GetCommand(){
	char received_char;
	received_char = UART_read();
     166:	0e 94 26 03 	call	0x64c	; 0x64c <UART_read>
	
	switch(received_char){
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	fc 01       	movw	r30, r24
     16e:	e3 54       	subi	r30, 0x43	; 67
     170:	f1 09       	sbc	r31, r1
     172:	eb 32       	cpi	r30, 0x2B	; 43
     174:	f1 05       	cpc	r31, r1
     176:	c0 f4       	brcc	.+48     	; 0x1a8 <CTRL_GetCommand+0x42>
     178:	ec 5c       	subi	r30, 0xCC	; 204
     17a:	ff 4f       	sbci	r31, 0xFF	; 255
     17c:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__tablejump2__>
		case 'F':
			return FORWARD;
			break;
		case 'Q':
			return FORWARD_LEFT;
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	08 95       	ret
			break;
		case 'E':
			return FORWARD_RIGHT;
     184:	82 e0       	ldi	r24, 0x02	; 2
     186:	08 95       	ret
			break;
		case 'G':
			return BACKWARDS;
     188:	83 e0       	ldi	r24, 0x03	; 3
     18a:	08 95       	ret
			break;
		case 'Z':
			return BACKWARDS_LEFT;
     18c:	84 e0       	ldi	r24, 0x04	; 4
     18e:	08 95       	ret
			break;
		case 'C':
			return BACKWARDS_RIGHT;
     190:	85 e0       	ldi	r24, 0x05	; 5
     192:	08 95       	ret
			break;
		case 'S':
			return NEUTRAL;
     194:	86 e0       	ldi	r24, 0x06	; 6
     196:	08 95       	ret
			break;
		case 'J':
			return POWER;
     198:	87 e0       	ldi	r24, 0x07	; 7
     19a:	08 95       	ret
			break;
		case 'M':
			return LIGHTS_ON;
     19c:	88 e0       	ldi	r24, 0x08	; 8
     19e:	08 95       	ret
			break;
		case 'm':
			return LIGHTS_OFF;
     1a0:	89 e0       	ldi	r24, 0x09	; 9
     1a2:	08 95       	ret
			break;
		case 'X':
			return BEEP;
     1a4:	8a e0       	ldi	r24, 0x0A	; 10
     1a6:	08 95       	ret
			break;
		default:
			return UNKNOWN;
     1a8:	8b e0       	ldi	r24, 0x0B	; 11
     1aa:	08 95       	ret
	char received_char;
	received_char = UART_read();
	
	switch(received_char){
		case 'F':
			return FORWARD;
     1ac:	80 e0       	ldi	r24, 0x00	; 0
			break;
		default:
			return UNKNOWN;
			break;
	}
}
     1ae:	08 95       	ret

000001b0 <Init_Timer0>:
	LnS_BuzzerSwitch(OFF);
}

int LnS_CheckDawn(){
	
}
     1b0:	84 b5       	in	r24, 0x24	; 36
     1b2:	83 62       	ori	r24, 0x23	; 35
     1b4:	84 bd       	out	0x24, r24	; 36
     1b6:	85 b5       	in	r24, 0x25	; 37
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	85 bd       	out	0x25, r24	; 37
     1bc:	80 e4       	ldi	r24, 0x40	; 64
     1be:	87 bd       	out	0x27, r24	; 39
     1c0:	08 95       	ret

000001c2 <LnS_Init>:
     1c2:	38 9a       	sbi	0x07, 0	; 7
     1c4:	39 9a       	sbi	0x07, 1	; 7
     1c6:	3a 9a       	sbi	0x07, 2	; 7
     1c8:	55 9a       	sbi	0x0a, 5	; 10
     1ca:	40 98       	cbi	0x08, 0	; 8
     1cc:	41 98       	cbi	0x08, 1	; 8
     1ce:	42 98       	cbi	0x08, 2	; 8
     1d0:	5d 98       	cbi	0x0b, 5	; 11
     1d2:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <Init_Timer0>
     1d6:	85 b5       	in	r24, 0x25	; 37
     1d8:	15 bc       	out	0x25, r1	; 37
     1da:	08 95       	ret

000001dc <LnS_BuzzerSwitch>:
/* LnS_BuzzerSwitch
 * Switch buzzer ON/OFF
 *	state: ON/OFF defined in .h
 */
void LnS_BuzzerSwitch(int state){
	if(state == OFF)
     1dc:	89 2b       	or	r24, r25
     1de:	19 f4       	brne	.+6      	; 0x1e6 <LnS_BuzzerSwitch+0xa>
		TCCR0B &= (0 << CS02);	
     1e0:	85 b5       	in	r24, 0x25	; 37
     1e2:	15 bc       	out	0x25, r1	; 37
     1e4:	08 95       	ret
	else
		TCCR0B |= (1 << CS02);					//16Mhz / (1 * 255) = 62kHz}
     1e6:	85 b5       	in	r24, 0x25	; 37
     1e8:	84 60       	ori	r24, 0x04	; 4
     1ea:	85 bd       	out	0x25, r24	; 37
     1ec:	08 95       	ret

000001ee <main>:
#include <util/delay.h>


int main(void)
{	
	UART_init(9600, true, true);
     1ee:	41 e0       	ldi	r20, 0x01	; 1
     1f0:	61 e0       	ldi	r22, 0x01	; 1
     1f2:	80 e8       	ldi	r24, 0x80	; 128
     1f4:	95 e2       	ldi	r25, 0x25	; 37
     1f6:	0e 94 cf 02 	call	0x59e	; 0x59e <UART_init>
	enum commands command;
	
	sr_04 *mysensor = sensor_new(4, &DDRB, DDB1, &PORTB, PORTB1, &DDRB, DDB2, &PINB, PINB2);
     1fa:	68 94       	set
     1fc:	88 24       	eor	r8, r8
     1fe:	81 f8       	bld	r8, 1
     200:	0f 2e       	mov	r0, r31
     202:	f3 e2       	ldi	r31, 0x23	; 35
     204:	af 2e       	mov	r10, r31
     206:	b1 2c       	mov	r11, r1
     208:	f0 2d       	mov	r31, r0
     20a:	68 94       	set
     20c:	cc 24       	eor	r12, r12
     20e:	c1 f8       	bld	r12, 1
     210:	0f 2e       	mov	r0, r31
     212:	f4 e2       	ldi	r31, 0x24	; 36
     214:	ef 2e       	mov	r14, r31
     216:	f1 2c       	mov	r15, r1
     218:	f0 2d       	mov	r31, r0
     21a:	01 e0       	ldi	r16, 0x01	; 1
     21c:	25 e2       	ldi	r18, 0x25	; 37
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	41 e0       	ldi	r20, 0x01	; 1
     222:	64 e2       	ldi	r22, 0x24	; 36
     224:	70 e0       	ldi	r23, 0x00	; 0
     226:	84 e0       	ldi	r24, 0x04	; 4
     228:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <sensor_new>
     22c:	ec 01       	movw	r28, r24
	
	POWTR_Init();
     22e:	0e 94 6f 01 	call	0x2de	; 0x2de <POWTR_Init>
	LnS_Init();
     232:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <LnS_Init>
	
	LnS_BuzzerSwitch(ON);
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LnS_BuzzerSwitch>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     23e:	2f ef       	ldi	r18, 0xFF	; 255
     240:	84 e3       	ldi	r24, 0x34	; 52
     242:	9c e0       	ldi	r25, 0x0C	; 12
     244:	21 50       	subi	r18, 0x01	; 1
     246:	80 40       	sbci	r24, 0x00	; 0
     248:	90 40       	sbci	r25, 0x00	; 0
     24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x56>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x60>
     24e:	00 00       	nop
	while (1)
	{		
		// read sensors
		
		get_dist_cm(mysensor);
		CTRL_SendDistance((mysensor->_last_distance_mm)/10);
     250:	0f 2e       	mov	r0, r31
     252:	fa e0       	ldi	r31, 0x0A	; 10
     254:	cf 2e       	mov	r12, r31
     256:	d1 2c       	mov	r13, r1
     258:	e1 2c       	mov	r14, r1
     25a:	f1 2c       	mov	r15, r1
     25c:	f0 2d       	mov	r31, r0
	
	while (1)
	{		
		// read sensors
		
		get_dist_cm(mysensor);
     25e:	ce 01       	movw	r24, r28
     260:	0e 94 ab 02 	call	0x556	; 0x556 <get_dist_cm>
		CTRL_SendDistance((mysensor->_last_distance_mm)/10);
     264:	68 81       	ld	r22, Y
     266:	79 81       	ldd	r23, Y+1	; 0x01
     268:	8a 81       	ldd	r24, Y+2	; 0x02
     26a:	9b 81       	ldd	r25, Y+3	; 0x03
     26c:	a7 01       	movw	r20, r14
     26e:	96 01       	movw	r18, r12
     270:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__udivmodsi4>
     274:	ca 01       	movw	r24, r20
     276:	b9 01       	movw	r22, r18
     278:	0e 94 85 00 	call	0x10a	; 0x10a <CTRL_SendDistance>
		
		if(mysensor->_last_distance_mm < 150) {
     27c:	88 81       	ld	r24, Y
     27e:	99 81       	ldd	r25, Y+1	; 0x01
     280:	aa 81       	ldd	r26, Y+2	; 0x02
     282:	bb 81       	ldd	r27, Y+3	; 0x03
     284:	86 39       	cpi	r24, 0x96	; 150
     286:	91 05       	cpc	r25, r1
     288:	a1 05       	cpc	r26, r1
     28a:	b1 05       	cpc	r27, r1
     28c:	28 f4       	brcc	.+10     	; 0x298 <main+0xaa>
			LnS_BuzzerSwitch(ON);
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LnS_BuzzerSwitch>
     296:	04 c0       	rjmp	.+8      	; 0x2a0 <main+0xb2>
			} else {
			LnS_BuzzerSwitch(OFF);
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LnS_BuzzerSwitch>
		}
		
		// read commands from controller
		if(UART_available()){
     2a0:	0e 94 20 03 	call	0x640	; 0x640 <UART_available>
     2a4:	88 23       	and	r24, r24
     2a6:	31 f0       	breq	.+12     	; 0x2b4 <main+0xc6>
			command = CTRL_GetCommand();
     2a8:	0e 94 b3 00 	call	0x166	; 0x166 <CTRL_GetCommand>
			if((int)command <= 7){
     2ac:	88 30       	cpi	r24, 0x08	; 8
     2ae:	10 f4       	brcc	.+4      	; 0x2b4 <main+0xc6>
				POWTR_SendCommand(command);
     2b0:	0e 94 a8 01 	call	0x350	; 0x350 <POWTR_SendCommand>
     2b4:	2f ef       	ldi	r18, 0xFF	; 255
     2b6:	80 e7       	ldi	r24, 0x70	; 112
     2b8:	92 e0       	ldi	r25, 0x02	; 2
     2ba:	21 50       	subi	r18, 0x01	; 1
     2bc:	80 40       	sbci	r24, 0x00	; 0
     2be:	90 40       	sbci	r25, 0x00	; 0
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <main+0xcc>
     2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <main+0xd6>
     2c4:	00 00       	nop
     2c6:	cb cf       	rjmp	.-106    	; 0x25e <main+0x70>

000002c8 <Timer2_Init>:
 * Set compare value (PWM duty) for timer2
 * Params:
 *	compare_value: value to write to compare register (0-255)
 */
void Timer2_SetCounter(int compare_value){
	OCR2A = compare_value;
     2c8:	e0 eb       	ldi	r30, 0xB0	; 176
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	80 81       	ld	r24, Z
     2ce:	83 68       	ori	r24, 0x83	; 131
     2d0:	80 83       	st	Z, r24
     2d2:	e1 eb       	ldi	r30, 0xB1	; 177
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	84 60       	ori	r24, 0x04	; 4
     2da:	80 83       	st	Z, r24
     2dc:	08 95       	ret

000002de <POWTR_Init>:
/* POWTR_init
 * Initialize motoros PWM, pins as outputs and set them to LOW
 */
void POWTR_Init(){
	// driving motor pins
	DDRD |= (1 << PIN_BWD);
     2de:	54 9a       	sbi	0x0a, 4	; 10
	DDRC |= (1 << PIN_FWD);
     2e0:	3d 9a       	sbi	0x07, 5	; 7
	DDRB |= (1 << PIN_POWER);
     2e2:	23 9a       	sbi	0x04, 3	; 4
	PORTD &= ~(1 << PIN_BWD);
     2e4:	5c 98       	cbi	0x0b, 4	; 11
	PORTC &= ~(1 << PIN_FWD);
     2e6:	45 98       	cbi	0x08, 5	; 8
	PORTB &= ~(1 << PIN_POWER);
     2e8:	2b 98       	cbi	0x05, 3	; 5
	
	// turning motor pins
	DDRD |= (1 << PIN_TURN_L);
     2ea:	57 9a       	sbi	0x0a, 7	; 10
	DDRB |= (1 << PIN_TURN_R);
     2ec:	20 9a       	sbi	0x04, 0	; 4
	PORTD &= ~(1 << PIN_TURN_L);
     2ee:	5f 98       	cbi	0x0b, 7	; 11
	PORTB &= ~(1 << PIN_TURN_R);
     2f0:	28 98       	cbi	0x05, 0	; 5
	
	Timer2_Init();
     2f2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Timer2_Init>
     2f6:	08 95       	ret

000002f8 <POWTR_TurnLeft>:
/* POWTR_TurnLeft
 * Set motor driver inputs to rotate turning
 * motor left
 */
void POWTR_TurnLeft(){
	PORTD |= (1 << PIN_TURN_L);
     2f8:	5f 9a       	sbi	0x0b, 7	; 11
	PORTB &= ~(1 << PIN_TURN_R);
     2fa:	28 98       	cbi	0x05, 0	; 5
     2fc:	08 95       	ret

000002fe <POWTR_TurnRight>:
/* POWTR_TurnRight
 * Set motor driver inputs to rotate turning
 * motor left
 */
void POWTR_TurnRight(){
	PORTD &= ~(1 << PIN_TURN_L);
     2fe:	5f 98       	cbi	0x0b, 7	; 11
	PORTB |= (1 << PIN_TURN_R);
     300:	28 9a       	sbi	0x05, 0	; 5
     302:	08 95       	ret

00000304 <POWTR_NoTurn>:

/* POWTR_NoTurn
 * Set motor driver inputs to 0 to not turn the wheels
 */
void POWTR_NoTurn(){
	PORTD &= ~(1 << PIN_TURN_L);
     304:	5f 98       	cbi	0x0b, 7	; 11
	PORTB &= ~(1 << PIN_TURN_R);
     306:	28 98       	cbi	0x05, 0	; 5
     308:	08 95       	ret

0000030a <POWTR_DriveForward>:
/* POWTR_DriveForward
 * Set motor driver inputs to rotate 
 * driving motor forward
 */
void POWTR_DriveForward(){
	PORTC |= (1 << PIN_FWD);
     30a:	45 9a       	sbi	0x08, 5	; 8
	PORTD &= ~(1 << PIN_BWD);
     30c:	5c 98       	cbi	0x0b, 4	; 11
 * Set compare value (PWM duty) for timer2
 * Params:
 *	compare_value: value to write to compare register (0-255)
 */
void Timer2_SetCounter(int compare_value){
	OCR2A = compare_value;
     30e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <power>
     312:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <power+0x1>
     316:	4e e6       	ldi	r20, 0x6E	; 110
     318:	42 9f       	mul	r20, r18
     31a:	c0 01       	movw	r24, r0
     31c:	43 9f       	mul	r20, r19
     31e:	90 0d       	add	r25, r0
     320:	11 24       	eor	r1, r1
     322:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     326:	08 95       	ret

00000328 <POWTR_DriveBackward>:
/* POWTR_DriveBackward
 * Set motor driver inputs to rotate 
 * driving motor backward
 */
void POWTR_DriveBackward(){
	PORTC &= ~(1 << PIN_FWD);
     328:	45 98       	cbi	0x08, 5	; 8
	PORTD |= (1 << PIN_BWD);
     32a:	5c 9a       	sbi	0x0b, 4	; 11
 * Set compare value (PWM duty) for timer2
 * Params:
 *	compare_value: value to write to compare register (0-255)
 */
void Timer2_SetCounter(int compare_value){
	OCR2A = compare_value;
     32c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <power>
     330:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <power+0x1>
     334:	4e e6       	ldi	r20, 0x6E	; 110
     336:	42 9f       	mul	r20, r18
     338:	c0 01       	movw	r24, r0
     33a:	43 9f       	mul	r20, r19
     33c:	90 0d       	add	r25, r0
     33e:	11 24       	eor	r1, r1
     340:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     344:	08 95       	ret

00000346 <POWTR_Stop>:
     346:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
/* POWTR_Stop
 * Set motor driver inputs and timer counter to 0
 */
void POWTR_Stop(){
	Timer2_SetCounter(0);
	PORTC &= ~(1 << PIN_FWD);
     34a:	45 98       	cbi	0x08, 5	; 8
	PORTD &= ~(1 << PIN_BWD);
     34c:	5c 98       	cbi	0x0b, 4	; 11
     34e:	08 95       	ret

00000350 <POWTR_SendCommand>:
 * Params:
 *	command:	command from bluetooth module (of type enum command)
 *				related to powertrain
 */
void POWTR_SendCommand(enum commands command){
	switch(command){
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	87 30       	cpi	r24, 0x07	; 7
     354:	91 05       	cpc	r25, r1
     356:	38 f5       	brcc	.+78     	; 0x3a6 <POWTR_SendCommand+0x56>
     358:	fc 01       	movw	r30, r24
     35a:	e1 5a       	subi	r30, 0xA1	; 161
     35c:	ff 4f       	sbci	r31, 0xFF	; 255
     35e:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__tablejump2__>
		case FORWARD:
			POWTR_NoTurn();
     362:	0e 94 82 01 	call	0x304	; 0x304 <POWTR_NoTurn>
			POWTR_DriveForward();
     366:	0e 94 85 01 	call	0x30a	; 0x30a <POWTR_DriveForward>
			break;
     36a:	08 95       	ret
		case FORWARD_LEFT:
			POWTR_TurnLeft();
     36c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <POWTR_TurnLeft>
			POWTR_DriveForward();
     370:	0e 94 85 01 	call	0x30a	; 0x30a <POWTR_DriveForward>
			break;
     374:	08 95       	ret
		case FORWARD_RIGHT:
			POWTR_TurnRight();
     376:	0e 94 7f 01 	call	0x2fe	; 0x2fe <POWTR_TurnRight>
			POWTR_DriveForward();
     37a:	0e 94 85 01 	call	0x30a	; 0x30a <POWTR_DriveForward>
			break;
     37e:	08 95       	ret
		case BACKWARDS:
			POWTR_NoTurn();
     380:	0e 94 82 01 	call	0x304	; 0x304 <POWTR_NoTurn>
			POWTR_DriveBackward();
     384:	0e 94 94 01 	call	0x328	; 0x328 <POWTR_DriveBackward>
			break;
     388:	08 95       	ret
		case BACKWARDS_LEFT:
			POWTR_TurnLeft();
     38a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <POWTR_TurnLeft>
			POWTR_DriveBackward();
     38e:	0e 94 94 01 	call	0x328	; 0x328 <POWTR_DriveBackward>
			break;
     392:	08 95       	ret
		case BACKWARDS_RIGHT:
			POWTR_TurnRight();
     394:	0e 94 7f 01 	call	0x2fe	; 0x2fe <POWTR_TurnRight>
			POWTR_DriveBackward();
     398:	0e 94 94 01 	call	0x328	; 0x328 <POWTR_DriveBackward>
			break;
     39c:	08 95       	ret
		case NEUTRAL:
			POWTR_NoTurn();
     39e:	0e 94 82 01 	call	0x304	; 0x304 <POWTR_NoTurn>
			POWTR_Stop();
     3a2:	0e 94 a3 01 	call	0x346	; 0x346 <POWTR_Stop>
     3a6:	08 95       	ret

000003a8 <sensor_new>:
  TCCR1B &= ~((1 << CS12)|(1 << CS11)|(1 << CS10));
}

int calculate_distance_mm(uint16_t duration) {
  return (unsigned long)((double)duration * 0.686);
}
     3a8:	4f 92       	push	r4
     3aa:	5f 92       	push	r5
     3ac:	6f 92       	push	r6
     3ae:	7f 92       	push	r7
     3b0:	8f 92       	push	r8
     3b2:	af 92       	push	r10
     3b4:	bf 92       	push	r11
     3b6:	cf 92       	push	r12
     3b8:	df 92       	push	r13
     3ba:	ef 92       	push	r14
     3bc:	ff 92       	push	r15
     3be:	0f 93       	push	r16
     3c0:	1f 93       	push	r17
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	cd b7       	in	r28, 0x3d	; 61
     3c8:	de b7       	in	r29, 0x3e	; 62
     3ca:	18 2f       	mov	r17, r24
     3cc:	2b 01       	movw	r4, r22
     3ce:	d4 2e       	mov	r13, r20
     3d0:	39 01       	movw	r6, r18
     3d2:	83 e1       	ldi	r24, 0x13	; 19
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <malloc>
     3da:	fc 01       	movw	r30, r24
     3dc:	d2 01       	movw	r26, r4
     3de:	4c 91       	ld	r20, X
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	9c 01       	movw	r18, r24
     3e6:	0d 2c       	mov	r0, r13
     3e8:	02 c0       	rjmp	.+4      	; 0x3ee <sensor_new+0x46>
     3ea:	22 0f       	add	r18, r18
     3ec:	33 1f       	adc	r19, r19
     3ee:	0a 94       	dec	r0
     3f0:	e2 f7       	brpl	.-8      	; 0x3ea <sensor_new+0x42>
     3f2:	24 2b       	or	r18, r20
     3f4:	2c 93       	st	X, r18
     3f6:	d3 01       	movw	r26, r6
     3f8:	4c 91       	ld	r20, X
     3fa:	9c 01       	movw	r18, r24
     3fc:	00 2e       	mov	r0, r16
     3fe:	02 c0       	rjmp	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     400:	22 0f       	add	r18, r18
     402:	33 1f       	adc	r19, r19
     404:	0a 94       	dec	r0
     406:	e2 f7       	brpl	.-8      	; 0x400 <__LOCK_REGION_LENGTH__>
     408:	24 23       	and	r18, r20
     40a:	2c 93       	st	X, r18
     40c:	d7 01       	movw	r26, r14
     40e:	2c 91       	ld	r18, X
     410:	0c 2c       	mov	r0, r12
     412:	02 c0       	rjmp	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     414:	88 0f       	add	r24, r24
     416:	99 1f       	adc	r25, r25
     418:	0a 94       	dec	r0
     41a:	e2 f7       	brpl	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     41c:	80 95       	com	r24
     41e:	82 23       	and	r24, r18
     420:	8c 93       	st	X, r24
     422:	a0 e8       	ldi	r26, 0x80	; 128
     424:	b0 e0       	ldi	r27, 0x00	; 0
     426:	8c 91       	ld	r24, X
     428:	1c 92       	st	X, r1
     42a:	16 83       	std	Z+6, r17	; 0x06
     42c:	50 86       	std	Z+8, r5	; 0x08
     42e:	47 82       	std	Z+7, r4	; 0x07
     430:	d1 86       	std	Z+9, r13	; 0x09
     432:	73 86       	std	Z+11, r7	; 0x0b
     434:	62 86       	std	Z+10, r6	; 0x0a
     436:	04 87       	std	Z+12, r16	; 0x0c
     438:	f6 86       	std	Z+14, r15	; 0x0e
     43a:	e5 86       	std	Z+13, r14	; 0x0d
     43c:	c7 86       	std	Z+15, r12	; 0x0f
     43e:	b1 8a       	std	Z+17, r11	; 0x11
     440:	a0 8a       	std	Z+16, r10	; 0x10
     442:	82 8a       	std	Z+18, r8	; 0x12
     444:	15 82       	std	Z+5, r1	; 0x05
     446:	14 82       	std	Z+4, r1	; 0x04
     448:	10 82       	st	Z, r1
     44a:	11 82       	std	Z+1, r1	; 0x01
     44c:	12 82       	std	Z+2, r1	; 0x02
     44e:	13 82       	std	Z+3, r1	; 0x03
     450:	cf 01       	movw	r24, r30
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	1f 91       	pop	r17
     458:	0f 91       	pop	r16
     45a:	ff 90       	pop	r15
     45c:	ef 90       	pop	r14
     45e:	df 90       	pop	r13
     460:	cf 90       	pop	r12
     462:	bf 90       	pop	r11
     464:	af 90       	pop	r10
     466:	8f 90       	pop	r8
     468:	7f 90       	pop	r7
     46a:	6f 90       	pop	r6
     46c:	5f 90       	pop	r5
     46e:	4f 90       	pop	r4
     470:	08 95       	ret

00000472 <set_trig_high>:
     472:	dc 01       	movw	r26, r24
     474:	1a 96       	adiw	r26, 0x0a	; 10
     476:	ed 91       	ld	r30, X+
     478:	fc 91       	ld	r31, X
     47a:	1b 97       	sbiw	r26, 0x0b	; 11
     47c:	40 81       	ld	r20, Z
     47e:	21 e0       	ldi	r18, 0x01	; 1
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	c9 01       	movw	r24, r18
     484:	1c 96       	adiw	r26, 0x0c	; 12
     486:	0c 90       	ld	r0, X
     488:	02 c0       	rjmp	.+4      	; 0x48e <set_trig_high+0x1c>
     48a:	88 0f       	add	r24, r24
     48c:	99 1f       	adc	r25, r25
     48e:	0a 94       	dec	r0
     490:	e2 f7       	brpl	.-8      	; 0x48a <set_trig_high+0x18>
     492:	84 2b       	or	r24, r20
     494:	80 83       	st	Z, r24
     496:	08 95       	ret

00000498 <set_trig_low>:
     498:	dc 01       	movw	r26, r24
     49a:	1a 96       	adiw	r26, 0x0a	; 10
     49c:	ed 91       	ld	r30, X+
     49e:	fc 91       	ld	r31, X
     4a0:	1b 97       	sbiw	r26, 0x0b	; 11
     4a2:	40 81       	ld	r20, Z
     4a4:	21 e0       	ldi	r18, 0x01	; 1
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	b9 01       	movw	r22, r18
     4aa:	1c 96       	adiw	r26, 0x0c	; 12
     4ac:	0c 90       	ld	r0, X
     4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <set_trig_low+0x1c>
     4b0:	66 0f       	add	r22, r22
     4b2:	77 1f       	adc	r23, r23
     4b4:	0a 94       	dec	r0
     4b6:	e2 f7       	brpl	.-8      	; 0x4b0 <set_trig_low+0x18>
     4b8:	cb 01       	movw	r24, r22
     4ba:	80 95       	com	r24
     4bc:	84 23       	and	r24, r20
     4be:	80 83       	st	Z, r24
     4c0:	08 95       	ret

000004c2 <measure_duration>:
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	ec 01       	movw	r28, r24
     4c8:	0e 94 4c 02 	call	0x498	; 0x498 <set_trig_low>
     4cc:	8a e0       	ldi	r24, 0x0A	; 10
     4ce:	8a 95       	dec	r24
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <measure_duration+0xc>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <measure_duration+0x12>
     4d4:	ce 01       	movw	r24, r28
     4d6:	0e 94 39 02 	call	0x472	; 0x472 <set_trig_high>
     4da:	85 e3       	ldi	r24, 0x35	; 53
     4dc:	8a 95       	dec	r24
     4de:	f1 f7       	brne	.-4      	; 0x4dc <measure_duration+0x1a>
     4e0:	00 00       	nop
     4e2:	ce 01       	movw	r24, r28
     4e4:	0e 94 4c 02 	call	0x498	; 0x498 <set_trig_low>
     4e8:	e8 89       	ldd	r30, Y+16	; 0x10
     4ea:	f9 89       	ldd	r31, Y+17	; 0x11
     4ec:	21 e0       	ldi	r18, 0x01	; 1
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	0a 88       	ldd	r0, Y+18	; 0x12
     4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <measure_duration+0x36>
     4f4:	22 0f       	add	r18, r18
     4f6:	33 1f       	adc	r19, r19
     4f8:	0a 94       	dec	r0
     4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <measure_duration+0x32>
     4fc:	80 81       	ld	r24, Z
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	82 23       	and	r24, r18
     502:	93 23       	and	r25, r19
     504:	89 2b       	or	r24, r25
     506:	d1 f3       	breq	.-12     	; 0x4fc <measure_duration+0x3a>
     508:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     50c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     510:	e1 e8       	ldi	r30, 0x81	; 129
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	83 60       	ori	r24, 0x03	; 3
     518:	80 83       	st	Z, r24
     51a:	e8 89       	ldd	r30, Y+16	; 0x10
     51c:	f9 89       	ldd	r31, Y+17	; 0x11
     51e:	21 e0       	ldi	r18, 0x01	; 1
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	0a 88       	ldd	r0, Y+18	; 0x12
     524:	02 c0       	rjmp	.+4      	; 0x52a <measure_duration+0x68>
     526:	22 0f       	add	r18, r18
     528:	33 1f       	adc	r19, r19
     52a:	0a 94       	dec	r0
     52c:	e2 f7       	brpl	.-8      	; 0x526 <measure_duration+0x64>
     52e:	80 81       	ld	r24, Z
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	82 23       	and	r24, r18
     534:	93 23       	and	r25, r19
     536:	89 2b       	or	r24, r25
     538:	d1 f7       	brne	.-12     	; 0x52e <measure_duration+0x6c>
     53a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     53e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     542:	9d 83       	std	Y+5, r25	; 0x05
     544:	8c 83       	std	Y+4, r24	; 0x04
     546:	e1 e8       	ldi	r30, 0x81	; 129
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	88 7f       	andi	r24, 0xF8	; 248
     54e:	80 83       	st	Z, r24
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	08 95       	ret

00000556 <get_dist_cm>:

int get_dist_cm(sr_04 *sensor) {
     556:	0f 93       	push	r16
     558:	1f 93       	push	r17
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	ec 01       	movw	r28, r24
  measure_duration(sensor);
     560:	0e 94 61 02 	call	0x4c2	; 0x4c2 <measure_duration>
  // stop timer
  TCCR1B &= ~((1 << CS12)|(1 << CS11)|(1 << CS10));
}

int calculate_distance_mm(uint16_t duration) {
  return (unsigned long)((double)duration * 0.686);
     564:	6c 81       	ldd	r22, Y+4	; 0x04
     566:	7d 81       	ldd	r23, Y+5	; 0x05
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__floatunsisf>
     570:	22 eb       	ldi	r18, 0xB2	; 178
     572:	3d e9       	ldi	r19, 0x9D	; 157
     574:	4f e2       	ldi	r20, 0x2F	; 47
     576:	5f e3       	ldi	r21, 0x3F	; 63
     578:	0e 94 be 03 	call	0x77c	; 0x77c <__mulsf3>
     57c:	0e 94 29 03 	call	0x652	; 0x652 <__fixunssfsi>
}

int get_dist_cm(sr_04 *sensor) {
  measure_duration(sensor);
  sensor->_last_distance_mm = calculate_distance_mm(sensor->_last_duration);
     580:	8b 01       	movw	r16, r22
     582:	07 2e       	mov	r0, r23
     584:	00 0c       	add	r0, r0
     586:	22 0b       	sbc	r18, r18
     588:	33 0b       	sbc	r19, r19
     58a:	08 83       	st	Y, r16
     58c:	19 83       	std	Y+1, r17	; 0x01
     58e:	2a 83       	std	Y+2, r18	; 0x02
     590:	3b 83       	std	Y+3, r19	; 0x03

  return sensor->_last_distance_mm;
}
     592:	cb 01       	movw	r24, r22
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	1f 91       	pop	r17
     59a:	0f 91       	pop	r16
     59c:	08 95       	ret

0000059e <UART_init>:
#include <avr/io.h>
#include <stdbool.h>

#define F_CPU 16000000UL

void UART_init(unsigned int baud, bool RX, bool TX){
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	d6 2f       	mov	r29, r22
     5a4:	c4 2f       	mov	r28, r20
	unsigned int baudrate;
	baudrate = (((F_CPU / (baud * 16UL))) - 1);
     5a6:	a0 e0       	ldi	r26, 0x00	; 0
     5a8:	b0 e0       	ldi	r27, 0x00	; 0
     5aa:	88 0f       	add	r24, r24
     5ac:	99 1f       	adc	r25, r25
     5ae:	aa 1f       	adc	r26, r26
     5b0:	bb 1f       	adc	r27, r27
     5b2:	88 0f       	add	r24, r24
     5b4:	99 1f       	adc	r25, r25
     5b6:	aa 1f       	adc	r26, r26
     5b8:	bb 1f       	adc	r27, r27
     5ba:	9c 01       	movw	r18, r24
     5bc:	ad 01       	movw	r20, r26
     5be:	22 0f       	add	r18, r18
     5c0:	33 1f       	adc	r19, r19
     5c2:	44 1f       	adc	r20, r20
     5c4:	55 1f       	adc	r21, r21
     5c6:	22 0f       	add	r18, r18
     5c8:	33 1f       	adc	r19, r19
     5ca:	44 1f       	adc	r20, r20
     5cc:	55 1f       	adc	r21, r21
     5ce:	60 e0       	ldi	r22, 0x00	; 0
     5d0:	74 e2       	ldi	r23, 0x24	; 36
     5d2:	84 ef       	ldi	r24, 0xF4	; 244
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__udivmodsi4>
     5da:	21 50       	subi	r18, 0x01	; 1
     5dc:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned char)(baudrate >> 8);
     5de:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)baudrate;
     5e2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	// parity bits
	//UCSR0C |= 1 << UPM01; // 1 parity bit
	
	// data bits
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00);
     5e6:	e2 ec       	ldi	r30, 0xC2	; 194
     5e8:	f0 e0       	ldi	r31, 0x00	; 0
     5ea:	80 81       	ld	r24, Z
     5ec:	86 60       	ori	r24, 0x06	; 6
     5ee:	80 83       	st	Z, r24
	
	// 1 stopbit is default

	if(RX) {
     5f0:	dd 23       	and	r29, r29
     5f2:	29 f0       	breq	.+10     	; 0x5fe <UART_init+0x60>
		UCSR0B |= 1<<RXEN0;
     5f4:	e1 ec       	ldi	r30, 0xC1	; 193
     5f6:	f0 e0       	ldi	r31, 0x00	; 0
     5f8:	80 81       	ld	r24, Z
     5fa:	80 61       	ori	r24, 0x10	; 16
     5fc:	80 83       	st	Z, r24
	}
	
	if(TX) {
     5fe:	cc 23       	and	r28, r28
     600:	29 f0       	breq	.+10     	; 0x60c <UART_init+0x6e>
		UCSR0B |= 1<<TXEN0;
     602:	e1 ec       	ldi	r30, 0xC1	; 193
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	80 81       	ld	r24, Z
     608:	88 60       	ori	r24, 0x08	; 8
     60a:	80 83       	st	Z, r24
	}
}
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <UART_send>:

void UART_send( unsigned char data){
	while(!(UCSR0A & (1<<UDRE0)));
     612:	e0 ec       	ldi	r30, 0xC0	; 192
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	90 81       	ld	r25, Z
     618:	95 ff       	sbrs	r25, 5
     61a:	fd cf       	rjmp	.-6      	; 0x616 <UART_send+0x4>
	UDR0 = data;
     61c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     620:	08 95       	ret

00000622 <UART_putstring>:
}

void UART_putstring(char* StringPtr){
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
     628:	88 81       	ld	r24, Y
     62a:	88 23       	and	r24, r24
     62c:	31 f0       	breq	.+12     	; 0x63a <UART_putstring+0x18>
     62e:	21 96       	adiw	r28, 0x01	; 1
	{
		UART_send(*StringPtr);
     630:	0e 94 09 03 	call	0x612	; 0x612 <UART_send>
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}

void UART_putstring(char* StringPtr){
	while(*StringPtr != 0x00)
     634:	89 91       	ld	r24, Y+
     636:	81 11       	cpse	r24, r1
     638:	fb cf       	rjmp	.-10     	; 0x630 <UART_putstring+0xe>
	{
		UART_send(*StringPtr);
		StringPtr++;
	}
}
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	08 95       	ret

00000640 <UART_available>:

bool UART_available(){
	return (UCSR0A & (1<<RXC0));
     640:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
}
     644:	88 1f       	adc	r24, r24
     646:	88 27       	eor	r24, r24
     648:	88 1f       	adc	r24, r24
     64a:	08 95       	ret

0000064c <UART_read>:

unsigned char UART_read(){
	return UDR0;
     64c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     650:	08 95       	ret

00000652 <__fixunssfsi>:
     652:	0e 94 9d 03 	call	0x73a	; 0x73a <__fp_splitA>
     656:	88 f0       	brcs	.+34     	; 0x67a <__fixunssfsi+0x28>
     658:	9f 57       	subi	r25, 0x7F	; 127
     65a:	98 f0       	brcs	.+38     	; 0x682 <__fixunssfsi+0x30>
     65c:	b9 2f       	mov	r27, r25
     65e:	99 27       	eor	r25, r25
     660:	b7 51       	subi	r27, 0x17	; 23
     662:	b0 f0       	brcs	.+44     	; 0x690 <__fixunssfsi+0x3e>
     664:	e1 f0       	breq	.+56     	; 0x69e <__fixunssfsi+0x4c>
     666:	66 0f       	add	r22, r22
     668:	77 1f       	adc	r23, r23
     66a:	88 1f       	adc	r24, r24
     66c:	99 1f       	adc	r25, r25
     66e:	1a f0       	brmi	.+6      	; 0x676 <__fixunssfsi+0x24>
     670:	ba 95       	dec	r27
     672:	c9 f7       	brne	.-14     	; 0x666 <__fixunssfsi+0x14>
     674:	14 c0       	rjmp	.+40     	; 0x69e <__fixunssfsi+0x4c>
     676:	b1 30       	cpi	r27, 0x01	; 1
     678:	91 f0       	breq	.+36     	; 0x69e <__fixunssfsi+0x4c>
     67a:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_zero>
     67e:	b1 e0       	ldi	r27, 0x01	; 1
     680:	08 95       	ret
     682:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_zero>
     686:	67 2f       	mov	r22, r23
     688:	78 2f       	mov	r23, r24
     68a:	88 27       	eor	r24, r24
     68c:	b8 5f       	subi	r27, 0xF8	; 248
     68e:	39 f0       	breq	.+14     	; 0x69e <__fixunssfsi+0x4c>
     690:	b9 3f       	cpi	r27, 0xF9	; 249
     692:	cc f3       	brlt	.-14     	; 0x686 <__fixunssfsi+0x34>
     694:	86 95       	lsr	r24
     696:	77 95       	ror	r23
     698:	67 95       	ror	r22
     69a:	b3 95       	inc	r27
     69c:	d9 f7       	brne	.-10     	; 0x694 <__fixunssfsi+0x42>
     69e:	3e f4       	brtc	.+14     	; 0x6ae <__fixunssfsi+0x5c>
     6a0:	90 95       	com	r25
     6a2:	80 95       	com	r24
     6a4:	70 95       	com	r23
     6a6:	61 95       	neg	r22
     6a8:	7f 4f       	sbci	r23, 0xFF	; 255
     6aa:	8f 4f       	sbci	r24, 0xFF	; 255
     6ac:	9f 4f       	sbci	r25, 0xFF	; 255
     6ae:	08 95       	ret

000006b0 <__floatunsisf>:
     6b0:	e8 94       	clt
     6b2:	09 c0       	rjmp	.+18     	; 0x6c6 <__floatsisf+0x12>

000006b4 <__floatsisf>:
     6b4:	97 fb       	bst	r25, 7
     6b6:	3e f4       	brtc	.+14     	; 0x6c6 <__floatsisf+0x12>
     6b8:	90 95       	com	r25
     6ba:	80 95       	com	r24
     6bc:	70 95       	com	r23
     6be:	61 95       	neg	r22
     6c0:	7f 4f       	sbci	r23, 0xFF	; 255
     6c2:	8f 4f       	sbci	r24, 0xFF	; 255
     6c4:	9f 4f       	sbci	r25, 0xFF	; 255
     6c6:	99 23       	and	r25, r25
     6c8:	a9 f0       	breq	.+42     	; 0x6f4 <__floatsisf+0x40>
     6ca:	f9 2f       	mov	r31, r25
     6cc:	96 e9       	ldi	r25, 0x96	; 150
     6ce:	bb 27       	eor	r27, r27
     6d0:	93 95       	inc	r25
     6d2:	f6 95       	lsr	r31
     6d4:	87 95       	ror	r24
     6d6:	77 95       	ror	r23
     6d8:	67 95       	ror	r22
     6da:	b7 95       	ror	r27
     6dc:	f1 11       	cpse	r31, r1
     6de:	f8 cf       	rjmp	.-16     	; 0x6d0 <__floatsisf+0x1c>
     6e0:	fa f4       	brpl	.+62     	; 0x720 <__floatsisf+0x6c>
     6e2:	bb 0f       	add	r27, r27
     6e4:	11 f4       	brne	.+4      	; 0x6ea <__floatsisf+0x36>
     6e6:	60 ff       	sbrs	r22, 0
     6e8:	1b c0       	rjmp	.+54     	; 0x720 <__floatsisf+0x6c>
     6ea:	6f 5f       	subi	r22, 0xFF	; 255
     6ec:	7f 4f       	sbci	r23, 0xFF	; 255
     6ee:	8f 4f       	sbci	r24, 0xFF	; 255
     6f0:	9f 4f       	sbci	r25, 0xFF	; 255
     6f2:	16 c0       	rjmp	.+44     	; 0x720 <__floatsisf+0x6c>
     6f4:	88 23       	and	r24, r24
     6f6:	11 f0       	breq	.+4      	; 0x6fc <__floatsisf+0x48>
     6f8:	96 e9       	ldi	r25, 0x96	; 150
     6fa:	11 c0       	rjmp	.+34     	; 0x71e <__floatsisf+0x6a>
     6fc:	77 23       	and	r23, r23
     6fe:	21 f0       	breq	.+8      	; 0x708 <__floatsisf+0x54>
     700:	9e e8       	ldi	r25, 0x8E	; 142
     702:	87 2f       	mov	r24, r23
     704:	76 2f       	mov	r23, r22
     706:	05 c0       	rjmp	.+10     	; 0x712 <__floatsisf+0x5e>
     708:	66 23       	and	r22, r22
     70a:	71 f0       	breq	.+28     	; 0x728 <__floatsisf+0x74>
     70c:	96 e8       	ldi	r25, 0x86	; 134
     70e:	86 2f       	mov	r24, r22
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	2a f0       	brmi	.+10     	; 0x720 <__floatsisf+0x6c>
     716:	9a 95       	dec	r25
     718:	66 0f       	add	r22, r22
     71a:	77 1f       	adc	r23, r23
     71c:	88 1f       	adc	r24, r24
     71e:	da f7       	brpl	.-10     	; 0x716 <__floatsisf+0x62>
     720:	88 0f       	add	r24, r24
     722:	96 95       	lsr	r25
     724:	87 95       	ror	r24
     726:	97 f9       	bld	r25, 7
     728:	08 95       	ret

0000072a <__fp_split3>:
     72a:	57 fd       	sbrc	r21, 7
     72c:	90 58       	subi	r25, 0x80	; 128
     72e:	44 0f       	add	r20, r20
     730:	55 1f       	adc	r21, r21
     732:	59 f0       	breq	.+22     	; 0x74a <__fp_splitA+0x10>
     734:	5f 3f       	cpi	r21, 0xFF	; 255
     736:	71 f0       	breq	.+28     	; 0x754 <__fp_splitA+0x1a>
     738:	47 95       	ror	r20

0000073a <__fp_splitA>:
     73a:	88 0f       	add	r24, r24
     73c:	97 fb       	bst	r25, 7
     73e:	99 1f       	adc	r25, r25
     740:	61 f0       	breq	.+24     	; 0x75a <__fp_splitA+0x20>
     742:	9f 3f       	cpi	r25, 0xFF	; 255
     744:	79 f0       	breq	.+30     	; 0x764 <__fp_splitA+0x2a>
     746:	87 95       	ror	r24
     748:	08 95       	ret
     74a:	12 16       	cp	r1, r18
     74c:	13 06       	cpc	r1, r19
     74e:	14 06       	cpc	r1, r20
     750:	55 1f       	adc	r21, r21
     752:	f2 cf       	rjmp	.-28     	; 0x738 <__fp_split3+0xe>
     754:	46 95       	lsr	r20
     756:	f1 df       	rcall	.-30     	; 0x73a <__fp_splitA>
     758:	08 c0       	rjmp	.+16     	; 0x76a <__fp_splitA+0x30>
     75a:	16 16       	cp	r1, r22
     75c:	17 06       	cpc	r1, r23
     75e:	18 06       	cpc	r1, r24
     760:	99 1f       	adc	r25, r25
     762:	f1 cf       	rjmp	.-30     	; 0x746 <__fp_splitA+0xc>
     764:	86 95       	lsr	r24
     766:	71 05       	cpc	r23, r1
     768:	61 05       	cpc	r22, r1
     76a:	08 94       	sec
     76c:	08 95       	ret

0000076e <__fp_zero>:
     76e:	e8 94       	clt

00000770 <__fp_szero>:
     770:	bb 27       	eor	r27, r27
     772:	66 27       	eor	r22, r22
     774:	77 27       	eor	r23, r23
     776:	cb 01       	movw	r24, r22
     778:	97 f9       	bld	r25, 7
     77a:	08 95       	ret

0000077c <__mulsf3>:
     77c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__mulsf3x>
     780:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_round>
     784:	0e 94 34 04 	call	0x868	; 0x868 <__fp_pscA>
     788:	38 f0       	brcs	.+14     	; 0x798 <__mulsf3+0x1c>
     78a:	0e 94 3b 04 	call	0x876	; 0x876 <__fp_pscB>
     78e:	20 f0       	brcs	.+8      	; 0x798 <__mulsf3+0x1c>
     790:	95 23       	and	r25, r21
     792:	11 f0       	breq	.+4      	; 0x798 <__mulsf3+0x1c>
     794:	0c 94 2b 04 	jmp	0x856	; 0x856 <__fp_inf>
     798:	0c 94 31 04 	jmp	0x862	; 0x862 <__fp_nan>
     79c:	11 24       	eor	r1, r1
     79e:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_szero>

000007a2 <__mulsf3x>:
     7a2:	0e 94 95 03 	call	0x72a	; 0x72a <__fp_split3>
     7a6:	70 f3       	brcs	.-36     	; 0x784 <__mulsf3+0x8>

000007a8 <__mulsf3_pse>:
     7a8:	95 9f       	mul	r25, r21
     7aa:	c1 f3       	breq	.-16     	; 0x79c <__mulsf3+0x20>
     7ac:	95 0f       	add	r25, r21
     7ae:	50 e0       	ldi	r21, 0x00	; 0
     7b0:	55 1f       	adc	r21, r21
     7b2:	62 9f       	mul	r22, r18
     7b4:	f0 01       	movw	r30, r0
     7b6:	72 9f       	mul	r23, r18
     7b8:	bb 27       	eor	r27, r27
     7ba:	f0 0d       	add	r31, r0
     7bc:	b1 1d       	adc	r27, r1
     7be:	63 9f       	mul	r22, r19
     7c0:	aa 27       	eor	r26, r26
     7c2:	f0 0d       	add	r31, r0
     7c4:	b1 1d       	adc	r27, r1
     7c6:	aa 1f       	adc	r26, r26
     7c8:	64 9f       	mul	r22, r20
     7ca:	66 27       	eor	r22, r22
     7cc:	b0 0d       	add	r27, r0
     7ce:	a1 1d       	adc	r26, r1
     7d0:	66 1f       	adc	r22, r22
     7d2:	82 9f       	mul	r24, r18
     7d4:	22 27       	eor	r18, r18
     7d6:	b0 0d       	add	r27, r0
     7d8:	a1 1d       	adc	r26, r1
     7da:	62 1f       	adc	r22, r18
     7dc:	73 9f       	mul	r23, r19
     7de:	b0 0d       	add	r27, r0
     7e0:	a1 1d       	adc	r26, r1
     7e2:	62 1f       	adc	r22, r18
     7e4:	83 9f       	mul	r24, r19
     7e6:	a0 0d       	add	r26, r0
     7e8:	61 1d       	adc	r22, r1
     7ea:	22 1f       	adc	r18, r18
     7ec:	74 9f       	mul	r23, r20
     7ee:	33 27       	eor	r19, r19
     7f0:	a0 0d       	add	r26, r0
     7f2:	61 1d       	adc	r22, r1
     7f4:	23 1f       	adc	r18, r19
     7f6:	84 9f       	mul	r24, r20
     7f8:	60 0d       	add	r22, r0
     7fa:	21 1d       	adc	r18, r1
     7fc:	82 2f       	mov	r24, r18
     7fe:	76 2f       	mov	r23, r22
     800:	6a 2f       	mov	r22, r26
     802:	11 24       	eor	r1, r1
     804:	9f 57       	subi	r25, 0x7F	; 127
     806:	50 40       	sbci	r21, 0x00	; 0
     808:	9a f0       	brmi	.+38     	; 0x830 <__mulsf3_pse+0x88>
     80a:	f1 f0       	breq	.+60     	; 0x848 <__mulsf3_pse+0xa0>
     80c:	88 23       	and	r24, r24
     80e:	4a f0       	brmi	.+18     	; 0x822 <__mulsf3_pse+0x7a>
     810:	ee 0f       	add	r30, r30
     812:	ff 1f       	adc	r31, r31
     814:	bb 1f       	adc	r27, r27
     816:	66 1f       	adc	r22, r22
     818:	77 1f       	adc	r23, r23
     81a:	88 1f       	adc	r24, r24
     81c:	91 50       	subi	r25, 0x01	; 1
     81e:	50 40       	sbci	r21, 0x00	; 0
     820:	a9 f7       	brne	.-22     	; 0x80c <__mulsf3_pse+0x64>
     822:	9e 3f       	cpi	r25, 0xFE	; 254
     824:	51 05       	cpc	r21, r1
     826:	80 f0       	brcs	.+32     	; 0x848 <__mulsf3_pse+0xa0>
     828:	0c 94 2b 04 	jmp	0x856	; 0x856 <__fp_inf>
     82c:	0c 94 b8 03 	jmp	0x770	; 0x770 <__fp_szero>
     830:	5f 3f       	cpi	r21, 0xFF	; 255
     832:	e4 f3       	brlt	.-8      	; 0x82c <__mulsf3_pse+0x84>
     834:	98 3e       	cpi	r25, 0xE8	; 232
     836:	d4 f3       	brlt	.-12     	; 0x82c <__mulsf3_pse+0x84>
     838:	86 95       	lsr	r24
     83a:	77 95       	ror	r23
     83c:	67 95       	ror	r22
     83e:	b7 95       	ror	r27
     840:	f7 95       	ror	r31
     842:	e7 95       	ror	r30
     844:	9f 5f       	subi	r25, 0xFF	; 255
     846:	c1 f7       	brne	.-16     	; 0x838 <__mulsf3_pse+0x90>
     848:	fe 2b       	or	r31, r30
     84a:	88 0f       	add	r24, r24
     84c:	91 1d       	adc	r25, r1
     84e:	96 95       	lsr	r25
     850:	87 95       	ror	r24
     852:	97 f9       	bld	r25, 7
     854:	08 95       	ret

00000856 <__fp_inf>:
     856:	97 f9       	bld	r25, 7
     858:	9f 67       	ori	r25, 0x7F	; 127
     85a:	80 e8       	ldi	r24, 0x80	; 128
     85c:	70 e0       	ldi	r23, 0x00	; 0
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	08 95       	ret

00000862 <__fp_nan>:
     862:	9f ef       	ldi	r25, 0xFF	; 255
     864:	80 ec       	ldi	r24, 0xC0	; 192
     866:	08 95       	ret

00000868 <__fp_pscA>:
     868:	00 24       	eor	r0, r0
     86a:	0a 94       	dec	r0
     86c:	16 16       	cp	r1, r22
     86e:	17 06       	cpc	r1, r23
     870:	18 06       	cpc	r1, r24
     872:	09 06       	cpc	r0, r25
     874:	08 95       	ret

00000876 <__fp_pscB>:
     876:	00 24       	eor	r0, r0
     878:	0a 94       	dec	r0
     87a:	12 16       	cp	r1, r18
     87c:	13 06       	cpc	r1, r19
     87e:	14 06       	cpc	r1, r20
     880:	05 06       	cpc	r0, r21
     882:	08 95       	ret

00000884 <__fp_round>:
     884:	09 2e       	mov	r0, r25
     886:	03 94       	inc	r0
     888:	00 0c       	add	r0, r0
     88a:	11 f4       	brne	.+4      	; 0x890 <__fp_round+0xc>
     88c:	88 23       	and	r24, r24
     88e:	52 f0       	brmi	.+20     	; 0x8a4 <__fp_round+0x20>
     890:	bb 0f       	add	r27, r27
     892:	40 f4       	brcc	.+16     	; 0x8a4 <__fp_round+0x20>
     894:	bf 2b       	or	r27, r31
     896:	11 f4       	brne	.+4      	; 0x89c <__fp_round+0x18>
     898:	60 ff       	sbrs	r22, 0
     89a:	04 c0       	rjmp	.+8      	; 0x8a4 <__fp_round+0x20>
     89c:	6f 5f       	subi	r22, 0xFF	; 255
     89e:	7f 4f       	sbci	r23, 0xFF	; 255
     8a0:	8f 4f       	sbci	r24, 0xFF	; 255
     8a2:	9f 4f       	sbci	r25, 0xFF	; 255
     8a4:	08 95       	ret

000008a6 <__udivmodsi4>:
     8a6:	a1 e2       	ldi	r26, 0x21	; 33
     8a8:	1a 2e       	mov	r1, r26
     8aa:	aa 1b       	sub	r26, r26
     8ac:	bb 1b       	sub	r27, r27
     8ae:	fd 01       	movw	r30, r26
     8b0:	0d c0       	rjmp	.+26     	; 0x8cc <__udivmodsi4_ep>

000008b2 <__udivmodsi4_loop>:
     8b2:	aa 1f       	adc	r26, r26
     8b4:	bb 1f       	adc	r27, r27
     8b6:	ee 1f       	adc	r30, r30
     8b8:	ff 1f       	adc	r31, r31
     8ba:	a2 17       	cp	r26, r18
     8bc:	b3 07       	cpc	r27, r19
     8be:	e4 07       	cpc	r30, r20
     8c0:	f5 07       	cpc	r31, r21
     8c2:	20 f0       	brcs	.+8      	; 0x8cc <__udivmodsi4_ep>
     8c4:	a2 1b       	sub	r26, r18
     8c6:	b3 0b       	sbc	r27, r19
     8c8:	e4 0b       	sbc	r30, r20
     8ca:	f5 0b       	sbc	r31, r21

000008cc <__udivmodsi4_ep>:
     8cc:	66 1f       	adc	r22, r22
     8ce:	77 1f       	adc	r23, r23
     8d0:	88 1f       	adc	r24, r24
     8d2:	99 1f       	adc	r25, r25
     8d4:	1a 94       	dec	r1
     8d6:	69 f7       	brne	.-38     	; 0x8b2 <__udivmodsi4_loop>
     8d8:	60 95       	com	r22
     8da:	70 95       	com	r23
     8dc:	80 95       	com	r24
     8de:	90 95       	com	r25
     8e0:	9b 01       	movw	r18, r22
     8e2:	ac 01       	movw	r20, r24
     8e4:	bd 01       	movw	r22, r26
     8e6:	cf 01       	movw	r24, r30
     8e8:	08 95       	ret

000008ea <__tablejump2__>:
     8ea:	ee 0f       	add	r30, r30
     8ec:	ff 1f       	adc	r31, r31
     8ee:	05 90       	lpm	r0, Z+
     8f0:	f4 91       	lpm	r31, Z
     8f2:	e0 2d       	mov	r30, r0
     8f4:	09 94       	ijmp

000008f6 <malloc>:
     8f6:	0f 93       	push	r16
     8f8:	1f 93       	push	r17
     8fa:	cf 93       	push	r28
     8fc:	df 93       	push	r29
     8fe:	82 30       	cpi	r24, 0x02	; 2
     900:	91 05       	cpc	r25, r1
     902:	10 f4       	brcc	.+4      	; 0x908 <__stack+0x9>
     904:	82 e0       	ldi	r24, 0x02	; 2
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__flp>
     90c:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__flp+0x1>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	a0 e0       	ldi	r26, 0x00	; 0
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	30 97       	sbiw	r30, 0x00	; 0
     91a:	19 f1       	breq	.+70     	; 0x962 <__stack+0x63>
     91c:	40 81       	ld	r20, Z
     91e:	51 81       	ldd	r21, Z+1	; 0x01
     920:	02 81       	ldd	r16, Z+2	; 0x02
     922:	13 81       	ldd	r17, Z+3	; 0x03
     924:	48 17       	cp	r20, r24
     926:	59 07       	cpc	r21, r25
     928:	c8 f0       	brcs	.+50     	; 0x95c <__stack+0x5d>
     92a:	84 17       	cp	r24, r20
     92c:	95 07       	cpc	r25, r21
     92e:	69 f4       	brne	.+26     	; 0x94a <__stack+0x4b>
     930:	10 97       	sbiw	r26, 0x00	; 0
     932:	31 f0       	breq	.+12     	; 0x940 <__stack+0x41>
     934:	12 96       	adiw	r26, 0x02	; 2
     936:	0c 93       	st	X, r16
     938:	12 97       	sbiw	r26, 0x02	; 2
     93a:	13 96       	adiw	r26, 0x03	; 3
     93c:	1c 93       	st	X, r17
     93e:	27 c0       	rjmp	.+78     	; 0x98e <__stack+0x8f>
     940:	00 93 16 01 	sts	0x0116, r16	; 0x800116 <__flp>
     944:	10 93 17 01 	sts	0x0117, r17	; 0x800117 <__flp+0x1>
     948:	22 c0       	rjmp	.+68     	; 0x98e <__stack+0x8f>
     94a:	21 15       	cp	r18, r1
     94c:	31 05       	cpc	r19, r1
     94e:	19 f0       	breq	.+6      	; 0x956 <__stack+0x57>
     950:	42 17       	cp	r20, r18
     952:	53 07       	cpc	r21, r19
     954:	18 f4       	brcc	.+6      	; 0x95c <__stack+0x5d>
     956:	9a 01       	movw	r18, r20
     958:	bd 01       	movw	r22, r26
     95a:	ef 01       	movw	r28, r30
     95c:	df 01       	movw	r26, r30
     95e:	f8 01       	movw	r30, r16
     960:	db cf       	rjmp	.-74     	; 0x918 <__stack+0x19>
     962:	21 15       	cp	r18, r1
     964:	31 05       	cpc	r19, r1
     966:	f9 f0       	breq	.+62     	; 0x9a6 <__stack+0xa7>
     968:	28 1b       	sub	r18, r24
     96a:	39 0b       	sbc	r19, r25
     96c:	24 30       	cpi	r18, 0x04	; 4
     96e:	31 05       	cpc	r19, r1
     970:	80 f4       	brcc	.+32     	; 0x992 <__stack+0x93>
     972:	8a 81       	ldd	r24, Y+2	; 0x02
     974:	9b 81       	ldd	r25, Y+3	; 0x03
     976:	61 15       	cp	r22, r1
     978:	71 05       	cpc	r23, r1
     97a:	21 f0       	breq	.+8      	; 0x984 <__stack+0x85>
     97c:	fb 01       	movw	r30, r22
     97e:	93 83       	std	Z+3, r25	; 0x03
     980:	82 83       	std	Z+2, r24	; 0x02
     982:	04 c0       	rjmp	.+8      	; 0x98c <__stack+0x8d>
     984:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__flp+0x1>
     988:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__flp>
     98c:	fe 01       	movw	r30, r28
     98e:	32 96       	adiw	r30, 0x02	; 2
     990:	44 c0       	rjmp	.+136    	; 0xa1a <__stack+0x11b>
     992:	fe 01       	movw	r30, r28
     994:	e2 0f       	add	r30, r18
     996:	f3 1f       	adc	r31, r19
     998:	81 93       	st	Z+, r24
     99a:	91 93       	st	Z+, r25
     99c:	22 50       	subi	r18, 0x02	; 2
     99e:	31 09       	sbc	r19, r1
     9a0:	39 83       	std	Y+1, r19	; 0x01
     9a2:	28 83       	st	Y, r18
     9a4:	3a c0       	rjmp	.+116    	; 0xa1a <__stack+0x11b>
     9a6:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
     9aa:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
     9ae:	23 2b       	or	r18, r19
     9b0:	41 f4       	brne	.+16     	; 0x9c2 <__stack+0xc3>
     9b2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     9b6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     9ba:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <__data_end+0x1>
     9be:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <__data_end>
     9c2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     9c6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     9ca:	21 15       	cp	r18, r1
     9cc:	31 05       	cpc	r19, r1
     9ce:	41 f4       	brne	.+16     	; 0x9e0 <__stack+0xe1>
     9d0:	2d b7       	in	r18, 0x3d	; 61
     9d2:	3e b7       	in	r19, 0x3e	; 62
     9d4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     9d8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     9dc:	24 1b       	sub	r18, r20
     9de:	35 0b       	sbc	r19, r21
     9e0:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end>
     9e4:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x1>
     9e8:	e2 17       	cp	r30, r18
     9ea:	f3 07       	cpc	r31, r19
     9ec:	a0 f4       	brcc	.+40     	; 0xa16 <__stack+0x117>
     9ee:	2e 1b       	sub	r18, r30
     9f0:	3f 0b       	sbc	r19, r31
     9f2:	28 17       	cp	r18, r24
     9f4:	39 07       	cpc	r19, r25
     9f6:	78 f0       	brcs	.+30     	; 0xa16 <__stack+0x117>
     9f8:	ac 01       	movw	r20, r24
     9fa:	4e 5f       	subi	r20, 0xFE	; 254
     9fc:	5f 4f       	sbci	r21, 0xFF	; 255
     9fe:	24 17       	cp	r18, r20
     a00:	35 07       	cpc	r19, r21
     a02:	48 f0       	brcs	.+18     	; 0xa16 <__stack+0x117>
     a04:	4e 0f       	add	r20, r30
     a06:	5f 1f       	adc	r21, r31
     a08:	50 93 15 01 	sts	0x0115, r21	; 0x800115 <__data_end+0x1>
     a0c:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <__data_end>
     a10:	81 93       	st	Z+, r24
     a12:	91 93       	st	Z+, r25
     a14:	02 c0       	rjmp	.+4      	; 0xa1a <__stack+0x11b>
     a16:	e0 e0       	ldi	r30, 0x00	; 0
     a18:	f0 e0       	ldi	r31, 0x00	; 0
     a1a:	cf 01       	movw	r24, r30
     a1c:	df 91       	pop	r29
     a1e:	cf 91       	pop	r28
     a20:	1f 91       	pop	r17
     a22:	0f 91       	pop	r16
     a24:	08 95       	ret

00000a26 <free>:
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	00 97       	sbiw	r24, 0x00	; 0
     a2c:	09 f4       	brne	.+2      	; 0xa30 <free+0xa>
     a2e:	81 c0       	rjmp	.+258    	; 0xb32 <free+0x10c>
     a30:	fc 01       	movw	r30, r24
     a32:	32 97       	sbiw	r30, 0x02	; 2
     a34:	13 82       	std	Z+3, r1	; 0x03
     a36:	12 82       	std	Z+2, r1	; 0x02
     a38:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <__flp>
     a3c:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <__flp+0x1>
     a40:	10 97       	sbiw	r26, 0x00	; 0
     a42:	81 f4       	brne	.+32     	; 0xa64 <free+0x3e>
     a44:	20 81       	ld	r18, Z
     a46:	31 81       	ldd	r19, Z+1	; 0x01
     a48:	82 0f       	add	r24, r18
     a4a:	93 1f       	adc	r25, r19
     a4c:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
     a50:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
     a54:	28 17       	cp	r18, r24
     a56:	39 07       	cpc	r19, r25
     a58:	51 f5       	brne	.+84     	; 0xaae <free+0x88>
     a5a:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x1>
     a5e:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end>
     a62:	67 c0       	rjmp	.+206    	; 0xb32 <free+0x10c>
     a64:	ed 01       	movw	r28, r26
     a66:	20 e0       	ldi	r18, 0x00	; 0
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	ce 17       	cp	r28, r30
     a6c:	df 07       	cpc	r29, r31
     a6e:	40 f4       	brcc	.+16     	; 0xa80 <free+0x5a>
     a70:	4a 81       	ldd	r20, Y+2	; 0x02
     a72:	5b 81       	ldd	r21, Y+3	; 0x03
     a74:	9e 01       	movw	r18, r28
     a76:	41 15       	cp	r20, r1
     a78:	51 05       	cpc	r21, r1
     a7a:	f1 f0       	breq	.+60     	; 0xab8 <free+0x92>
     a7c:	ea 01       	movw	r28, r20
     a7e:	f5 cf       	rjmp	.-22     	; 0xa6a <free+0x44>
     a80:	d3 83       	std	Z+3, r29	; 0x03
     a82:	c2 83       	std	Z+2, r28	; 0x02
     a84:	40 81       	ld	r20, Z
     a86:	51 81       	ldd	r21, Z+1	; 0x01
     a88:	84 0f       	add	r24, r20
     a8a:	95 1f       	adc	r25, r21
     a8c:	c8 17       	cp	r28, r24
     a8e:	d9 07       	cpc	r29, r25
     a90:	59 f4       	brne	.+22     	; 0xaa8 <free+0x82>
     a92:	88 81       	ld	r24, Y
     a94:	99 81       	ldd	r25, Y+1	; 0x01
     a96:	84 0f       	add	r24, r20
     a98:	95 1f       	adc	r25, r21
     a9a:	02 96       	adiw	r24, 0x02	; 2
     a9c:	91 83       	std	Z+1, r25	; 0x01
     a9e:	80 83       	st	Z, r24
     aa0:	8a 81       	ldd	r24, Y+2	; 0x02
     aa2:	9b 81       	ldd	r25, Y+3	; 0x03
     aa4:	93 83       	std	Z+3, r25	; 0x03
     aa6:	82 83       	std	Z+2, r24	; 0x02
     aa8:	21 15       	cp	r18, r1
     aaa:	31 05       	cpc	r19, r1
     aac:	29 f4       	brne	.+10     	; 0xab8 <free+0x92>
     aae:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__flp+0x1>
     ab2:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__flp>
     ab6:	3d c0       	rjmp	.+122    	; 0xb32 <free+0x10c>
     ab8:	e9 01       	movw	r28, r18
     aba:	fb 83       	std	Y+3, r31	; 0x03
     abc:	ea 83       	std	Y+2, r30	; 0x02
     abe:	49 91       	ld	r20, Y+
     ac0:	59 91       	ld	r21, Y+
     ac2:	c4 0f       	add	r28, r20
     ac4:	d5 1f       	adc	r29, r21
     ac6:	ec 17       	cp	r30, r28
     ac8:	fd 07       	cpc	r31, r29
     aca:	61 f4       	brne	.+24     	; 0xae4 <free+0xbe>
     acc:	80 81       	ld	r24, Z
     ace:	91 81       	ldd	r25, Z+1	; 0x01
     ad0:	84 0f       	add	r24, r20
     ad2:	95 1f       	adc	r25, r21
     ad4:	02 96       	adiw	r24, 0x02	; 2
     ad6:	e9 01       	movw	r28, r18
     ad8:	99 83       	std	Y+1, r25	; 0x01
     ada:	88 83       	st	Y, r24
     adc:	82 81       	ldd	r24, Z+2	; 0x02
     ade:	93 81       	ldd	r25, Z+3	; 0x03
     ae0:	9b 83       	std	Y+3, r25	; 0x03
     ae2:	8a 83       	std	Y+2, r24	; 0x02
     ae4:	e0 e0       	ldi	r30, 0x00	; 0
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	12 96       	adiw	r26, 0x02	; 2
     aea:	8d 91       	ld	r24, X+
     aec:	9c 91       	ld	r25, X
     aee:	13 97       	sbiw	r26, 0x03	; 3
     af0:	00 97       	sbiw	r24, 0x00	; 0
     af2:	19 f0       	breq	.+6      	; 0xafa <free+0xd4>
     af4:	fd 01       	movw	r30, r26
     af6:	dc 01       	movw	r26, r24
     af8:	f7 cf       	rjmp	.-18     	; 0xae8 <free+0xc2>
     afa:	8d 91       	ld	r24, X+
     afc:	9c 91       	ld	r25, X
     afe:	11 97       	sbiw	r26, 0x01	; 1
     b00:	9d 01       	movw	r18, r26
     b02:	2e 5f       	subi	r18, 0xFE	; 254
     b04:	3f 4f       	sbci	r19, 0xFF	; 255
     b06:	82 0f       	add	r24, r18
     b08:	93 1f       	adc	r25, r19
     b0a:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
     b0e:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	69 f4       	brne	.+26     	; 0xb32 <free+0x10c>
     b18:	30 97       	sbiw	r30, 0x00	; 0
     b1a:	29 f4       	brne	.+10     	; 0xb26 <free+0x100>
     b1c:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <__flp+0x1>
     b20:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__flp>
     b24:	02 c0       	rjmp	.+4      	; 0xb2a <free+0x104>
     b26:	13 82       	std	Z+3, r1	; 0x03
     b28:	12 82       	std	Z+2, r1	; 0x02
     b2a:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <__data_end+0x1>
     b2e:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <__data_end>
     b32:	df 91       	pop	r29
     b34:	cf 91       	pop	r28
     b36:	08 95       	ret

00000b38 <sprintf>:
     b38:	ae e0       	ldi	r26, 0x0E	; 14
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	e2 ea       	ldi	r30, 0xA2	; 162
     b3e:	f5 e0       	ldi	r31, 0x05	; 5
     b40:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__prologue_saves__+0x1c>
     b44:	0d 89       	ldd	r16, Y+21	; 0x15
     b46:	1e 89       	ldd	r17, Y+22	; 0x16
     b48:	86 e0       	ldi	r24, 0x06	; 6
     b4a:	8c 83       	std	Y+4, r24	; 0x04
     b4c:	1a 83       	std	Y+2, r17	; 0x02
     b4e:	09 83       	std	Y+1, r16	; 0x01
     b50:	8f ef       	ldi	r24, 0xFF	; 255
     b52:	9f e7       	ldi	r25, 0x7F	; 127
     b54:	9e 83       	std	Y+6, r25	; 0x06
     b56:	8d 83       	std	Y+5, r24	; 0x05
     b58:	ae 01       	movw	r20, r28
     b5a:	47 5e       	subi	r20, 0xE7	; 231
     b5c:	5f 4f       	sbci	r21, 0xFF	; 255
     b5e:	6f 89       	ldd	r22, Y+23	; 0x17
     b60:	78 8d       	ldd	r23, Y+24	; 0x18
     b62:	ce 01       	movw	r24, r28
     b64:	01 96       	adiw	r24, 0x01	; 1
     b66:	0e 94 be 05 	call	0xb7c	; 0xb7c <vfprintf>
     b6a:	ef 81       	ldd	r30, Y+7	; 0x07
     b6c:	f8 85       	ldd	r31, Y+8	; 0x08
     b6e:	e0 0f       	add	r30, r16
     b70:	f1 1f       	adc	r31, r17
     b72:	10 82       	st	Z, r1
     b74:	2e 96       	adiw	r28, 0x0e	; 14
     b76:	e4 e0       	ldi	r30, 0x04	; 4
     b78:	0c 94 79 08 	jmp	0x10f2	; 0x10f2 <__epilogue_restores__+0x1c>

00000b7c <vfprintf>:
     b7c:	ab e0       	ldi	r26, 0x0B	; 11
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	e4 ec       	ldi	r30, 0xC4	; 196
     b82:	f5 e0       	ldi	r31, 0x05	; 5
     b84:	0c 94 4f 08 	jmp	0x109e	; 0x109e <__prologue_saves__>
     b88:	6c 01       	movw	r12, r24
     b8a:	7b 01       	movw	r14, r22
     b8c:	8a 01       	movw	r16, r20
     b8e:	fc 01       	movw	r30, r24
     b90:	17 82       	std	Z+7, r1	; 0x07
     b92:	16 82       	std	Z+6, r1	; 0x06
     b94:	83 81       	ldd	r24, Z+3	; 0x03
     b96:	81 ff       	sbrs	r24, 1
     b98:	cc c1       	rjmp	.+920    	; 0xf32 <vfprintf+0x3b6>
     b9a:	ce 01       	movw	r24, r28
     b9c:	01 96       	adiw	r24, 0x01	; 1
     b9e:	3c 01       	movw	r6, r24
     ba0:	f6 01       	movw	r30, r12
     ba2:	93 81       	ldd	r25, Z+3	; 0x03
     ba4:	f7 01       	movw	r30, r14
     ba6:	93 fd       	sbrc	r25, 3
     ba8:	85 91       	lpm	r24, Z+
     baa:	93 ff       	sbrs	r25, 3
     bac:	81 91       	ld	r24, Z+
     bae:	7f 01       	movw	r14, r30
     bb0:	88 23       	and	r24, r24
     bb2:	09 f4       	brne	.+2      	; 0xbb6 <vfprintf+0x3a>
     bb4:	ba c1       	rjmp	.+884    	; 0xf2a <vfprintf+0x3ae>
     bb6:	85 32       	cpi	r24, 0x25	; 37
     bb8:	39 f4       	brne	.+14     	; 0xbc8 <vfprintf+0x4c>
     bba:	93 fd       	sbrc	r25, 3
     bbc:	85 91       	lpm	r24, Z+
     bbe:	93 ff       	sbrs	r25, 3
     bc0:	81 91       	ld	r24, Z+
     bc2:	7f 01       	movw	r14, r30
     bc4:	85 32       	cpi	r24, 0x25	; 37
     bc6:	29 f4       	brne	.+10     	; 0xbd2 <vfprintf+0x56>
     bc8:	b6 01       	movw	r22, r12
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     bd0:	e7 cf       	rjmp	.-50     	; 0xba0 <vfprintf+0x24>
     bd2:	91 2c       	mov	r9, r1
     bd4:	21 2c       	mov	r2, r1
     bd6:	31 2c       	mov	r3, r1
     bd8:	ff e1       	ldi	r31, 0x1F	; 31
     bda:	f3 15       	cp	r31, r3
     bdc:	d8 f0       	brcs	.+54     	; 0xc14 <vfprintf+0x98>
     bde:	8b 32       	cpi	r24, 0x2B	; 43
     be0:	79 f0       	breq	.+30     	; 0xc00 <vfprintf+0x84>
     be2:	38 f4       	brcc	.+14     	; 0xbf2 <vfprintf+0x76>
     be4:	80 32       	cpi	r24, 0x20	; 32
     be6:	79 f0       	breq	.+30     	; 0xc06 <vfprintf+0x8a>
     be8:	83 32       	cpi	r24, 0x23	; 35
     bea:	a1 f4       	brne	.+40     	; 0xc14 <vfprintf+0x98>
     bec:	23 2d       	mov	r18, r3
     bee:	20 61       	ori	r18, 0x10	; 16
     bf0:	1d c0       	rjmp	.+58     	; 0xc2c <vfprintf+0xb0>
     bf2:	8d 32       	cpi	r24, 0x2D	; 45
     bf4:	61 f0       	breq	.+24     	; 0xc0e <vfprintf+0x92>
     bf6:	80 33       	cpi	r24, 0x30	; 48
     bf8:	69 f4       	brne	.+26     	; 0xc14 <vfprintf+0x98>
     bfa:	23 2d       	mov	r18, r3
     bfc:	21 60       	ori	r18, 0x01	; 1
     bfe:	16 c0       	rjmp	.+44     	; 0xc2c <vfprintf+0xb0>
     c00:	83 2d       	mov	r24, r3
     c02:	82 60       	ori	r24, 0x02	; 2
     c04:	38 2e       	mov	r3, r24
     c06:	e3 2d       	mov	r30, r3
     c08:	e4 60       	ori	r30, 0x04	; 4
     c0a:	3e 2e       	mov	r3, r30
     c0c:	2a c0       	rjmp	.+84     	; 0xc62 <vfprintf+0xe6>
     c0e:	f3 2d       	mov	r31, r3
     c10:	f8 60       	ori	r31, 0x08	; 8
     c12:	1d c0       	rjmp	.+58     	; 0xc4e <vfprintf+0xd2>
     c14:	37 fc       	sbrc	r3, 7
     c16:	2d c0       	rjmp	.+90     	; 0xc72 <vfprintf+0xf6>
     c18:	20 ed       	ldi	r18, 0xD0	; 208
     c1a:	28 0f       	add	r18, r24
     c1c:	2a 30       	cpi	r18, 0x0A	; 10
     c1e:	40 f0       	brcs	.+16     	; 0xc30 <vfprintf+0xb4>
     c20:	8e 32       	cpi	r24, 0x2E	; 46
     c22:	b9 f4       	brne	.+46     	; 0xc52 <vfprintf+0xd6>
     c24:	36 fc       	sbrc	r3, 6
     c26:	81 c1       	rjmp	.+770    	; 0xf2a <vfprintf+0x3ae>
     c28:	23 2d       	mov	r18, r3
     c2a:	20 64       	ori	r18, 0x40	; 64
     c2c:	32 2e       	mov	r3, r18
     c2e:	19 c0       	rjmp	.+50     	; 0xc62 <vfprintf+0xe6>
     c30:	36 fe       	sbrs	r3, 6
     c32:	06 c0       	rjmp	.+12     	; 0xc40 <vfprintf+0xc4>
     c34:	8a e0       	ldi	r24, 0x0A	; 10
     c36:	98 9e       	mul	r9, r24
     c38:	20 0d       	add	r18, r0
     c3a:	11 24       	eor	r1, r1
     c3c:	92 2e       	mov	r9, r18
     c3e:	11 c0       	rjmp	.+34     	; 0xc62 <vfprintf+0xe6>
     c40:	ea e0       	ldi	r30, 0x0A	; 10
     c42:	2e 9e       	mul	r2, r30
     c44:	20 0d       	add	r18, r0
     c46:	11 24       	eor	r1, r1
     c48:	22 2e       	mov	r2, r18
     c4a:	f3 2d       	mov	r31, r3
     c4c:	f0 62       	ori	r31, 0x20	; 32
     c4e:	3f 2e       	mov	r3, r31
     c50:	08 c0       	rjmp	.+16     	; 0xc62 <vfprintf+0xe6>
     c52:	8c 36       	cpi	r24, 0x6C	; 108
     c54:	21 f4       	brne	.+8      	; 0xc5e <vfprintf+0xe2>
     c56:	83 2d       	mov	r24, r3
     c58:	80 68       	ori	r24, 0x80	; 128
     c5a:	38 2e       	mov	r3, r24
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <vfprintf+0xe6>
     c5e:	88 36       	cpi	r24, 0x68	; 104
     c60:	41 f4       	brne	.+16     	; 0xc72 <vfprintf+0xf6>
     c62:	f7 01       	movw	r30, r14
     c64:	93 fd       	sbrc	r25, 3
     c66:	85 91       	lpm	r24, Z+
     c68:	93 ff       	sbrs	r25, 3
     c6a:	81 91       	ld	r24, Z+
     c6c:	7f 01       	movw	r14, r30
     c6e:	81 11       	cpse	r24, r1
     c70:	b3 cf       	rjmp	.-154    	; 0xbd8 <vfprintf+0x5c>
     c72:	98 2f       	mov	r25, r24
     c74:	9f 7d       	andi	r25, 0xDF	; 223
     c76:	95 54       	subi	r25, 0x45	; 69
     c78:	93 30       	cpi	r25, 0x03	; 3
     c7a:	28 f4       	brcc	.+10     	; 0xc86 <vfprintf+0x10a>
     c7c:	0c 5f       	subi	r16, 0xFC	; 252
     c7e:	1f 4f       	sbci	r17, 0xFF	; 255
     c80:	9f e3       	ldi	r25, 0x3F	; 63
     c82:	99 83       	std	Y+1, r25	; 0x01
     c84:	0d c0       	rjmp	.+26     	; 0xca0 <vfprintf+0x124>
     c86:	83 36       	cpi	r24, 0x63	; 99
     c88:	31 f0       	breq	.+12     	; 0xc96 <vfprintf+0x11a>
     c8a:	83 37       	cpi	r24, 0x73	; 115
     c8c:	71 f0       	breq	.+28     	; 0xcaa <vfprintf+0x12e>
     c8e:	83 35       	cpi	r24, 0x53	; 83
     c90:	09 f0       	breq	.+2      	; 0xc94 <vfprintf+0x118>
     c92:	59 c0       	rjmp	.+178    	; 0xd46 <vfprintf+0x1ca>
     c94:	21 c0       	rjmp	.+66     	; 0xcd8 <vfprintf+0x15c>
     c96:	f8 01       	movw	r30, r16
     c98:	80 81       	ld	r24, Z
     c9a:	89 83       	std	Y+1, r24	; 0x01
     c9c:	0e 5f       	subi	r16, 0xFE	; 254
     c9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ca0:	88 24       	eor	r8, r8
     ca2:	83 94       	inc	r8
     ca4:	91 2c       	mov	r9, r1
     ca6:	53 01       	movw	r10, r6
     ca8:	13 c0       	rjmp	.+38     	; 0xcd0 <vfprintf+0x154>
     caa:	28 01       	movw	r4, r16
     cac:	f2 e0       	ldi	r31, 0x02	; 2
     cae:	4f 0e       	add	r4, r31
     cb0:	51 1c       	adc	r5, r1
     cb2:	f8 01       	movw	r30, r16
     cb4:	a0 80       	ld	r10, Z
     cb6:	b1 80       	ldd	r11, Z+1	; 0x01
     cb8:	36 fe       	sbrs	r3, 6
     cba:	03 c0       	rjmp	.+6      	; 0xcc2 <vfprintf+0x146>
     cbc:	69 2d       	mov	r22, r9
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <vfprintf+0x14a>
     cc2:	6f ef       	ldi	r22, 0xFF	; 255
     cc4:	7f ef       	ldi	r23, 0xFF	; 255
     cc6:	c5 01       	movw	r24, r10
     cc8:	0e 94 aa 07 	call	0xf54	; 0xf54 <strnlen>
     ccc:	4c 01       	movw	r8, r24
     cce:	82 01       	movw	r16, r4
     cd0:	f3 2d       	mov	r31, r3
     cd2:	ff 77       	andi	r31, 0x7F	; 127
     cd4:	3f 2e       	mov	r3, r31
     cd6:	16 c0       	rjmp	.+44     	; 0xd04 <vfprintf+0x188>
     cd8:	28 01       	movw	r4, r16
     cda:	22 e0       	ldi	r18, 0x02	; 2
     cdc:	42 0e       	add	r4, r18
     cde:	51 1c       	adc	r5, r1
     ce0:	f8 01       	movw	r30, r16
     ce2:	a0 80       	ld	r10, Z
     ce4:	b1 80       	ldd	r11, Z+1	; 0x01
     ce6:	36 fe       	sbrs	r3, 6
     ce8:	03 c0       	rjmp	.+6      	; 0xcf0 <vfprintf+0x174>
     cea:	69 2d       	mov	r22, r9
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	02 c0       	rjmp	.+4      	; 0xcf4 <vfprintf+0x178>
     cf0:	6f ef       	ldi	r22, 0xFF	; 255
     cf2:	7f ef       	ldi	r23, 0xFF	; 255
     cf4:	c5 01       	movw	r24, r10
     cf6:	0e 94 9f 07 	call	0xf3e	; 0xf3e <strnlen_P>
     cfa:	4c 01       	movw	r8, r24
     cfc:	f3 2d       	mov	r31, r3
     cfe:	f0 68       	ori	r31, 0x80	; 128
     d00:	3f 2e       	mov	r3, r31
     d02:	82 01       	movw	r16, r4
     d04:	33 fc       	sbrc	r3, 3
     d06:	1b c0       	rjmp	.+54     	; 0xd3e <vfprintf+0x1c2>
     d08:	82 2d       	mov	r24, r2
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	88 16       	cp	r8, r24
     d0e:	99 06       	cpc	r9, r25
     d10:	b0 f4       	brcc	.+44     	; 0xd3e <vfprintf+0x1c2>
     d12:	b6 01       	movw	r22, r12
     d14:	80 e2       	ldi	r24, 0x20	; 32
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     d1c:	2a 94       	dec	r2
     d1e:	f4 cf       	rjmp	.-24     	; 0xd08 <vfprintf+0x18c>
     d20:	f5 01       	movw	r30, r10
     d22:	37 fc       	sbrc	r3, 7
     d24:	85 91       	lpm	r24, Z+
     d26:	37 fe       	sbrs	r3, 7
     d28:	81 91       	ld	r24, Z+
     d2a:	5f 01       	movw	r10, r30
     d2c:	b6 01       	movw	r22, r12
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     d34:	21 10       	cpse	r2, r1
     d36:	2a 94       	dec	r2
     d38:	21 e0       	ldi	r18, 0x01	; 1
     d3a:	82 1a       	sub	r8, r18
     d3c:	91 08       	sbc	r9, r1
     d3e:	81 14       	cp	r8, r1
     d40:	91 04       	cpc	r9, r1
     d42:	71 f7       	brne	.-36     	; 0xd20 <vfprintf+0x1a4>
     d44:	e8 c0       	rjmp	.+464    	; 0xf16 <vfprintf+0x39a>
     d46:	84 36       	cpi	r24, 0x64	; 100
     d48:	11 f0       	breq	.+4      	; 0xd4e <vfprintf+0x1d2>
     d4a:	89 36       	cpi	r24, 0x69	; 105
     d4c:	41 f5       	brne	.+80     	; 0xd9e <vfprintf+0x222>
     d4e:	f8 01       	movw	r30, r16
     d50:	37 fe       	sbrs	r3, 7
     d52:	07 c0       	rjmp	.+14     	; 0xd62 <vfprintf+0x1e6>
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	82 81       	ldd	r24, Z+2	; 0x02
     d5a:	93 81       	ldd	r25, Z+3	; 0x03
     d5c:	0c 5f       	subi	r16, 0xFC	; 252
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	08 c0       	rjmp	.+16     	; 0xd72 <vfprintf+0x1f6>
     d62:	60 81       	ld	r22, Z
     d64:	71 81       	ldd	r23, Z+1	; 0x01
     d66:	07 2e       	mov	r0, r23
     d68:	00 0c       	add	r0, r0
     d6a:	88 0b       	sbc	r24, r24
     d6c:	99 0b       	sbc	r25, r25
     d6e:	0e 5f       	subi	r16, 0xFE	; 254
     d70:	1f 4f       	sbci	r17, 0xFF	; 255
     d72:	f3 2d       	mov	r31, r3
     d74:	ff 76       	andi	r31, 0x6F	; 111
     d76:	3f 2e       	mov	r3, r31
     d78:	97 ff       	sbrs	r25, 7
     d7a:	09 c0       	rjmp	.+18     	; 0xd8e <vfprintf+0x212>
     d7c:	90 95       	com	r25
     d7e:	80 95       	com	r24
     d80:	70 95       	com	r23
     d82:	61 95       	neg	r22
     d84:	7f 4f       	sbci	r23, 0xFF	; 255
     d86:	8f 4f       	sbci	r24, 0xFF	; 255
     d88:	9f 4f       	sbci	r25, 0xFF	; 255
     d8a:	f0 68       	ori	r31, 0x80	; 128
     d8c:	3f 2e       	mov	r3, r31
     d8e:	2a e0       	ldi	r18, 0x0A	; 10
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	a3 01       	movw	r20, r6
     d94:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__ultoa_invert>
     d98:	88 2e       	mov	r8, r24
     d9a:	86 18       	sub	r8, r6
     d9c:	45 c0       	rjmp	.+138    	; 0xe28 <vfprintf+0x2ac>
     d9e:	85 37       	cpi	r24, 0x75	; 117
     da0:	31 f4       	brne	.+12     	; 0xdae <vfprintf+0x232>
     da2:	23 2d       	mov	r18, r3
     da4:	2f 7e       	andi	r18, 0xEF	; 239
     da6:	b2 2e       	mov	r11, r18
     da8:	2a e0       	ldi	r18, 0x0A	; 10
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	25 c0       	rjmp	.+74     	; 0xdf8 <vfprintf+0x27c>
     dae:	93 2d       	mov	r25, r3
     db0:	99 7f       	andi	r25, 0xF9	; 249
     db2:	b9 2e       	mov	r11, r25
     db4:	8f 36       	cpi	r24, 0x6F	; 111
     db6:	c1 f0       	breq	.+48     	; 0xde8 <vfprintf+0x26c>
     db8:	18 f4       	brcc	.+6      	; 0xdc0 <vfprintf+0x244>
     dba:	88 35       	cpi	r24, 0x58	; 88
     dbc:	79 f0       	breq	.+30     	; 0xddc <vfprintf+0x260>
     dbe:	b5 c0       	rjmp	.+362    	; 0xf2a <vfprintf+0x3ae>
     dc0:	80 37       	cpi	r24, 0x70	; 112
     dc2:	19 f0       	breq	.+6      	; 0xdca <vfprintf+0x24e>
     dc4:	88 37       	cpi	r24, 0x78	; 120
     dc6:	21 f0       	breq	.+8      	; 0xdd0 <vfprintf+0x254>
     dc8:	b0 c0       	rjmp	.+352    	; 0xf2a <vfprintf+0x3ae>
     dca:	e9 2f       	mov	r30, r25
     dcc:	e0 61       	ori	r30, 0x10	; 16
     dce:	be 2e       	mov	r11, r30
     dd0:	b4 fe       	sbrs	r11, 4
     dd2:	0d c0       	rjmp	.+26     	; 0xdee <vfprintf+0x272>
     dd4:	fb 2d       	mov	r31, r11
     dd6:	f4 60       	ori	r31, 0x04	; 4
     dd8:	bf 2e       	mov	r11, r31
     dda:	09 c0       	rjmp	.+18     	; 0xdee <vfprintf+0x272>
     ddc:	34 fe       	sbrs	r3, 4
     dde:	0a c0       	rjmp	.+20     	; 0xdf4 <vfprintf+0x278>
     de0:	29 2f       	mov	r18, r25
     de2:	26 60       	ori	r18, 0x06	; 6
     de4:	b2 2e       	mov	r11, r18
     de6:	06 c0       	rjmp	.+12     	; 0xdf4 <vfprintf+0x278>
     de8:	28 e0       	ldi	r18, 0x08	; 8
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	05 c0       	rjmp	.+10     	; 0xdf8 <vfprintf+0x27c>
     dee:	20 e1       	ldi	r18, 0x10	; 16
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0x27c>
     df4:	20 e1       	ldi	r18, 0x10	; 16
     df6:	32 e0       	ldi	r19, 0x02	; 2
     df8:	f8 01       	movw	r30, r16
     dfa:	b7 fe       	sbrs	r11, 7
     dfc:	07 c0       	rjmp	.+14     	; 0xe0c <vfprintf+0x290>
     dfe:	60 81       	ld	r22, Z
     e00:	71 81       	ldd	r23, Z+1	; 0x01
     e02:	82 81       	ldd	r24, Z+2	; 0x02
     e04:	93 81       	ldd	r25, Z+3	; 0x03
     e06:	0c 5f       	subi	r16, 0xFC	; 252
     e08:	1f 4f       	sbci	r17, 0xFF	; 255
     e0a:	06 c0       	rjmp	.+12     	; 0xe18 <vfprintf+0x29c>
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 5f       	subi	r16, 0xFE	; 254
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
     e18:	a3 01       	movw	r20, r6
     e1a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__ultoa_invert>
     e1e:	88 2e       	mov	r8, r24
     e20:	86 18       	sub	r8, r6
     e22:	fb 2d       	mov	r31, r11
     e24:	ff 77       	andi	r31, 0x7F	; 127
     e26:	3f 2e       	mov	r3, r31
     e28:	36 fe       	sbrs	r3, 6
     e2a:	0d c0       	rjmp	.+26     	; 0xe46 <vfprintf+0x2ca>
     e2c:	23 2d       	mov	r18, r3
     e2e:	2e 7f       	andi	r18, 0xFE	; 254
     e30:	a2 2e       	mov	r10, r18
     e32:	89 14       	cp	r8, r9
     e34:	58 f4       	brcc	.+22     	; 0xe4c <vfprintf+0x2d0>
     e36:	34 fe       	sbrs	r3, 4
     e38:	0b c0       	rjmp	.+22     	; 0xe50 <vfprintf+0x2d4>
     e3a:	32 fc       	sbrc	r3, 2
     e3c:	09 c0       	rjmp	.+18     	; 0xe50 <vfprintf+0x2d4>
     e3e:	83 2d       	mov	r24, r3
     e40:	8e 7e       	andi	r24, 0xEE	; 238
     e42:	a8 2e       	mov	r10, r24
     e44:	05 c0       	rjmp	.+10     	; 0xe50 <vfprintf+0x2d4>
     e46:	b8 2c       	mov	r11, r8
     e48:	a3 2c       	mov	r10, r3
     e4a:	03 c0       	rjmp	.+6      	; 0xe52 <vfprintf+0x2d6>
     e4c:	b8 2c       	mov	r11, r8
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <vfprintf+0x2d6>
     e50:	b9 2c       	mov	r11, r9
     e52:	a4 fe       	sbrs	r10, 4
     e54:	0f c0       	rjmp	.+30     	; 0xe74 <vfprintf+0x2f8>
     e56:	fe 01       	movw	r30, r28
     e58:	e8 0d       	add	r30, r8
     e5a:	f1 1d       	adc	r31, r1
     e5c:	80 81       	ld	r24, Z
     e5e:	80 33       	cpi	r24, 0x30	; 48
     e60:	21 f4       	brne	.+8      	; 0xe6a <vfprintf+0x2ee>
     e62:	9a 2d       	mov	r25, r10
     e64:	99 7e       	andi	r25, 0xE9	; 233
     e66:	a9 2e       	mov	r10, r25
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <vfprintf+0x300>
     e6a:	a2 fe       	sbrs	r10, 2
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <vfprintf+0x2fe>
     e6e:	b3 94       	inc	r11
     e70:	b3 94       	inc	r11
     e72:	04 c0       	rjmp	.+8      	; 0xe7c <vfprintf+0x300>
     e74:	8a 2d       	mov	r24, r10
     e76:	86 78       	andi	r24, 0x86	; 134
     e78:	09 f0       	breq	.+2      	; 0xe7c <vfprintf+0x300>
     e7a:	b3 94       	inc	r11
     e7c:	a3 fc       	sbrc	r10, 3
     e7e:	11 c0       	rjmp	.+34     	; 0xea2 <vfprintf+0x326>
     e80:	a0 fe       	sbrs	r10, 0
     e82:	06 c0       	rjmp	.+12     	; 0xe90 <vfprintf+0x314>
     e84:	b2 14       	cp	r11, r2
     e86:	88 f4       	brcc	.+34     	; 0xeaa <vfprintf+0x32e>
     e88:	28 0c       	add	r2, r8
     e8a:	92 2c       	mov	r9, r2
     e8c:	9b 18       	sub	r9, r11
     e8e:	0e c0       	rjmp	.+28     	; 0xeac <vfprintf+0x330>
     e90:	b2 14       	cp	r11, r2
     e92:	60 f4       	brcc	.+24     	; 0xeac <vfprintf+0x330>
     e94:	b6 01       	movw	r22, r12
     e96:	80 e2       	ldi	r24, 0x20	; 32
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     e9e:	b3 94       	inc	r11
     ea0:	f7 cf       	rjmp	.-18     	; 0xe90 <vfprintf+0x314>
     ea2:	b2 14       	cp	r11, r2
     ea4:	18 f4       	brcc	.+6      	; 0xeac <vfprintf+0x330>
     ea6:	2b 18       	sub	r2, r11
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <vfprintf+0x332>
     eaa:	98 2c       	mov	r9, r8
     eac:	21 2c       	mov	r2, r1
     eae:	a4 fe       	sbrs	r10, 4
     eb0:	10 c0       	rjmp	.+32     	; 0xed2 <vfprintf+0x356>
     eb2:	b6 01       	movw	r22, r12
     eb4:	80 e3       	ldi	r24, 0x30	; 48
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     ebc:	a2 fe       	sbrs	r10, 2
     ebe:	17 c0       	rjmp	.+46     	; 0xeee <vfprintf+0x372>
     ec0:	a1 fc       	sbrc	r10, 1
     ec2:	03 c0       	rjmp	.+6      	; 0xeca <vfprintf+0x34e>
     ec4:	88 e7       	ldi	r24, 0x78	; 120
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	02 c0       	rjmp	.+4      	; 0xece <vfprintf+0x352>
     eca:	88 e5       	ldi	r24, 0x58	; 88
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	b6 01       	movw	r22, r12
     ed0:	0c c0       	rjmp	.+24     	; 0xeea <vfprintf+0x36e>
     ed2:	8a 2d       	mov	r24, r10
     ed4:	86 78       	andi	r24, 0x86	; 134
     ed6:	59 f0       	breq	.+22     	; 0xeee <vfprintf+0x372>
     ed8:	a1 fe       	sbrs	r10, 1
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <vfprintf+0x364>
     edc:	8b e2       	ldi	r24, 0x2B	; 43
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <vfprintf+0x366>
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	a7 fc       	sbrc	r10, 7
     ee4:	8d e2       	ldi	r24, 0x2D	; 45
     ee6:	b6 01       	movw	r22, r12
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     eee:	89 14       	cp	r8, r9
     ef0:	38 f4       	brcc	.+14     	; 0xf00 <vfprintf+0x384>
     ef2:	b6 01       	movw	r22, r12
     ef4:	80 e3       	ldi	r24, 0x30	; 48
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     efc:	9a 94       	dec	r9
     efe:	f7 cf       	rjmp	.-18     	; 0xeee <vfprintf+0x372>
     f00:	8a 94       	dec	r8
     f02:	f3 01       	movw	r30, r6
     f04:	e8 0d       	add	r30, r8
     f06:	f1 1d       	adc	r31, r1
     f08:	80 81       	ld	r24, Z
     f0a:	b6 01       	movw	r22, r12
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     f12:	81 10       	cpse	r8, r1
     f14:	f5 cf       	rjmp	.-22     	; 0xf00 <vfprintf+0x384>
     f16:	22 20       	and	r2, r2
     f18:	09 f4       	brne	.+2      	; 0xf1c <vfprintf+0x3a0>
     f1a:	42 ce       	rjmp	.-892    	; 0xba0 <vfprintf+0x24>
     f1c:	b6 01       	movw	r22, r12
     f1e:	80 e2       	ldi	r24, 0x20	; 32
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 b5 07 	call	0xf6a	; 0xf6a <fputc>
     f26:	2a 94       	dec	r2
     f28:	f6 cf       	rjmp	.-20     	; 0xf16 <vfprintf+0x39a>
     f2a:	f6 01       	movw	r30, r12
     f2c:	86 81       	ldd	r24, Z+6	; 0x06
     f2e:	97 81       	ldd	r25, Z+7	; 0x07
     f30:	02 c0       	rjmp	.+4      	; 0xf36 <vfprintf+0x3ba>
     f32:	8f ef       	ldi	r24, 0xFF	; 255
     f34:	9f ef       	ldi	r25, 0xFF	; 255
     f36:	2b 96       	adiw	r28, 0x0b	; 11
     f38:	e2 e1       	ldi	r30, 0x12	; 18
     f3a:	0c 94 6b 08 	jmp	0x10d6	; 0x10d6 <__epilogue_restores__>

00000f3e <strnlen_P>:
     f3e:	fc 01       	movw	r30, r24
     f40:	05 90       	lpm	r0, Z+
     f42:	61 50       	subi	r22, 0x01	; 1
     f44:	70 40       	sbci	r23, 0x00	; 0
     f46:	01 10       	cpse	r0, r1
     f48:	d8 f7       	brcc	.-10     	; 0xf40 <strnlen_P+0x2>
     f4a:	80 95       	com	r24
     f4c:	90 95       	com	r25
     f4e:	8e 0f       	add	r24, r30
     f50:	9f 1f       	adc	r25, r31
     f52:	08 95       	ret

00000f54 <strnlen>:
     f54:	fc 01       	movw	r30, r24
     f56:	61 50       	subi	r22, 0x01	; 1
     f58:	70 40       	sbci	r23, 0x00	; 0
     f5a:	01 90       	ld	r0, Z+
     f5c:	01 10       	cpse	r0, r1
     f5e:	d8 f7       	brcc	.-10     	; 0xf56 <strnlen+0x2>
     f60:	80 95       	com	r24
     f62:	90 95       	com	r25
     f64:	8e 0f       	add	r24, r30
     f66:	9f 1f       	adc	r25, r31
     f68:	08 95       	ret

00000f6a <fputc>:
     f6a:	0f 93       	push	r16
     f6c:	1f 93       	push	r17
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	fb 01       	movw	r30, r22
     f74:	23 81       	ldd	r18, Z+3	; 0x03
     f76:	21 fd       	sbrc	r18, 1
     f78:	03 c0       	rjmp	.+6      	; 0xf80 <fputc+0x16>
     f7a:	8f ef       	ldi	r24, 0xFF	; 255
     f7c:	9f ef       	ldi	r25, 0xFF	; 255
     f7e:	2c c0       	rjmp	.+88     	; 0xfd8 <fputc+0x6e>
     f80:	22 ff       	sbrs	r18, 2
     f82:	16 c0       	rjmp	.+44     	; 0xfb0 <fputc+0x46>
     f84:	46 81       	ldd	r20, Z+6	; 0x06
     f86:	57 81       	ldd	r21, Z+7	; 0x07
     f88:	24 81       	ldd	r18, Z+4	; 0x04
     f8a:	35 81       	ldd	r19, Z+5	; 0x05
     f8c:	42 17       	cp	r20, r18
     f8e:	53 07       	cpc	r21, r19
     f90:	44 f4       	brge	.+16     	; 0xfa2 <fputc+0x38>
     f92:	a0 81       	ld	r26, Z
     f94:	b1 81       	ldd	r27, Z+1	; 0x01
     f96:	9d 01       	movw	r18, r26
     f98:	2f 5f       	subi	r18, 0xFF	; 255
     f9a:	3f 4f       	sbci	r19, 0xFF	; 255
     f9c:	31 83       	std	Z+1, r19	; 0x01
     f9e:	20 83       	st	Z, r18
     fa0:	8c 93       	st	X, r24
     fa2:	26 81       	ldd	r18, Z+6	; 0x06
     fa4:	37 81       	ldd	r19, Z+7	; 0x07
     fa6:	2f 5f       	subi	r18, 0xFF	; 255
     fa8:	3f 4f       	sbci	r19, 0xFF	; 255
     faa:	37 83       	std	Z+7, r19	; 0x07
     fac:	26 83       	std	Z+6, r18	; 0x06
     fae:	14 c0       	rjmp	.+40     	; 0xfd8 <fputc+0x6e>
     fb0:	8b 01       	movw	r16, r22
     fb2:	ec 01       	movw	r28, r24
     fb4:	fb 01       	movw	r30, r22
     fb6:	00 84       	ldd	r0, Z+8	; 0x08
     fb8:	f1 85       	ldd	r31, Z+9	; 0x09
     fba:	e0 2d       	mov	r30, r0
     fbc:	09 95       	icall
     fbe:	89 2b       	or	r24, r25
     fc0:	e1 f6       	brne	.-72     	; 0xf7a <fputc+0x10>
     fc2:	d8 01       	movw	r26, r16
     fc4:	16 96       	adiw	r26, 0x06	; 6
     fc6:	8d 91       	ld	r24, X+
     fc8:	9c 91       	ld	r25, X
     fca:	17 97       	sbiw	r26, 0x07	; 7
     fcc:	01 96       	adiw	r24, 0x01	; 1
     fce:	17 96       	adiw	r26, 0x07	; 7
     fd0:	9c 93       	st	X, r25
     fd2:	8e 93       	st	-X, r24
     fd4:	16 97       	sbiw	r26, 0x06	; 6
     fd6:	ce 01       	movw	r24, r28
     fd8:	df 91       	pop	r29
     fda:	cf 91       	pop	r28
     fdc:	1f 91       	pop	r17
     fde:	0f 91       	pop	r16
     fe0:	08 95       	ret

00000fe2 <__ultoa_invert>:
     fe2:	fa 01       	movw	r30, r20
     fe4:	aa 27       	eor	r26, r26
     fe6:	28 30       	cpi	r18, 0x08	; 8
     fe8:	51 f1       	breq	.+84     	; 0x103e <__ultoa_invert+0x5c>
     fea:	20 31       	cpi	r18, 0x10	; 16
     fec:	81 f1       	breq	.+96     	; 0x104e <__ultoa_invert+0x6c>
     fee:	e8 94       	clt
     ff0:	6f 93       	push	r22
     ff2:	6e 7f       	andi	r22, 0xFE	; 254
     ff4:	6e 5f       	subi	r22, 0xFE	; 254
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	8f 4f       	sbci	r24, 0xFF	; 255
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	af 4f       	sbci	r26, 0xFF	; 255
     ffe:	b1 e0       	ldi	r27, 0x01	; 1
    1000:	3e d0       	rcall	.+124    	; 0x107e <__ultoa_invert+0x9c>
    1002:	b4 e0       	ldi	r27, 0x04	; 4
    1004:	3c d0       	rcall	.+120    	; 0x107e <__ultoa_invert+0x9c>
    1006:	67 0f       	add	r22, r23
    1008:	78 1f       	adc	r23, r24
    100a:	89 1f       	adc	r24, r25
    100c:	9a 1f       	adc	r25, r26
    100e:	a1 1d       	adc	r26, r1
    1010:	68 0f       	add	r22, r24
    1012:	79 1f       	adc	r23, r25
    1014:	8a 1f       	adc	r24, r26
    1016:	91 1d       	adc	r25, r1
    1018:	a1 1d       	adc	r26, r1
    101a:	6a 0f       	add	r22, r26
    101c:	71 1d       	adc	r23, r1
    101e:	81 1d       	adc	r24, r1
    1020:	91 1d       	adc	r25, r1
    1022:	a1 1d       	adc	r26, r1
    1024:	20 d0       	rcall	.+64     	; 0x1066 <__ultoa_invert+0x84>
    1026:	09 f4       	brne	.+2      	; 0x102a <__ultoa_invert+0x48>
    1028:	68 94       	set
    102a:	3f 91       	pop	r19
    102c:	2a e0       	ldi	r18, 0x0A	; 10
    102e:	26 9f       	mul	r18, r22
    1030:	11 24       	eor	r1, r1
    1032:	30 19       	sub	r19, r0
    1034:	30 5d       	subi	r19, 0xD0	; 208
    1036:	31 93       	st	Z+, r19
    1038:	de f6       	brtc	.-74     	; 0xff0 <__ultoa_invert+0xe>
    103a:	cf 01       	movw	r24, r30
    103c:	08 95       	ret
    103e:	46 2f       	mov	r20, r22
    1040:	47 70       	andi	r20, 0x07	; 7
    1042:	40 5d       	subi	r20, 0xD0	; 208
    1044:	41 93       	st	Z+, r20
    1046:	b3 e0       	ldi	r27, 0x03	; 3
    1048:	0f d0       	rcall	.+30     	; 0x1068 <__ultoa_invert+0x86>
    104a:	c9 f7       	brne	.-14     	; 0x103e <__ultoa_invert+0x5c>
    104c:	f6 cf       	rjmp	.-20     	; 0x103a <__ultoa_invert+0x58>
    104e:	46 2f       	mov	r20, r22
    1050:	4f 70       	andi	r20, 0x0F	; 15
    1052:	40 5d       	subi	r20, 0xD0	; 208
    1054:	4a 33       	cpi	r20, 0x3A	; 58
    1056:	18 f0       	brcs	.+6      	; 0x105e <__ultoa_invert+0x7c>
    1058:	49 5d       	subi	r20, 0xD9	; 217
    105a:	31 fd       	sbrc	r19, 1
    105c:	40 52       	subi	r20, 0x20	; 32
    105e:	41 93       	st	Z+, r20
    1060:	02 d0       	rcall	.+4      	; 0x1066 <__ultoa_invert+0x84>
    1062:	a9 f7       	brne	.-22     	; 0x104e <__ultoa_invert+0x6c>
    1064:	ea cf       	rjmp	.-44     	; 0x103a <__ultoa_invert+0x58>
    1066:	b4 e0       	ldi	r27, 0x04	; 4
    1068:	a6 95       	lsr	r26
    106a:	97 95       	ror	r25
    106c:	87 95       	ror	r24
    106e:	77 95       	ror	r23
    1070:	67 95       	ror	r22
    1072:	ba 95       	dec	r27
    1074:	c9 f7       	brne	.-14     	; 0x1068 <__ultoa_invert+0x86>
    1076:	00 97       	sbiw	r24, 0x00	; 0
    1078:	61 05       	cpc	r22, r1
    107a:	71 05       	cpc	r23, r1
    107c:	08 95       	ret
    107e:	9b 01       	movw	r18, r22
    1080:	ac 01       	movw	r20, r24
    1082:	0a 2e       	mov	r0, r26
    1084:	06 94       	lsr	r0
    1086:	57 95       	ror	r21
    1088:	47 95       	ror	r20
    108a:	37 95       	ror	r19
    108c:	27 95       	ror	r18
    108e:	ba 95       	dec	r27
    1090:	c9 f7       	brne	.-14     	; 0x1084 <__ultoa_invert+0xa2>
    1092:	62 0f       	add	r22, r18
    1094:	73 1f       	adc	r23, r19
    1096:	84 1f       	adc	r24, r20
    1098:	95 1f       	adc	r25, r21
    109a:	a0 1d       	adc	r26, r0
    109c:	08 95       	ret

0000109e <__prologue_saves__>:
    109e:	2f 92       	push	r2
    10a0:	3f 92       	push	r3
    10a2:	4f 92       	push	r4
    10a4:	5f 92       	push	r5
    10a6:	6f 92       	push	r6
    10a8:	7f 92       	push	r7
    10aa:	8f 92       	push	r8
    10ac:	9f 92       	push	r9
    10ae:	af 92       	push	r10
    10b0:	bf 92       	push	r11
    10b2:	cf 92       	push	r12
    10b4:	df 92       	push	r13
    10b6:	ef 92       	push	r14
    10b8:	ff 92       	push	r15
    10ba:	0f 93       	push	r16
    10bc:	1f 93       	push	r17
    10be:	cf 93       	push	r28
    10c0:	df 93       	push	r29
    10c2:	cd b7       	in	r28, 0x3d	; 61
    10c4:	de b7       	in	r29, 0x3e	; 62
    10c6:	ca 1b       	sub	r28, r26
    10c8:	db 0b       	sbc	r29, r27
    10ca:	0f b6       	in	r0, 0x3f	; 63
    10cc:	f8 94       	cli
    10ce:	de bf       	out	0x3e, r29	; 62
    10d0:	0f be       	out	0x3f, r0	; 63
    10d2:	cd bf       	out	0x3d, r28	; 61
    10d4:	09 94       	ijmp

000010d6 <__epilogue_restores__>:
    10d6:	2a 88       	ldd	r2, Y+18	; 0x12
    10d8:	39 88       	ldd	r3, Y+17	; 0x11
    10da:	48 88       	ldd	r4, Y+16	; 0x10
    10dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    10de:	6e 84       	ldd	r6, Y+14	; 0x0e
    10e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    10e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    10e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    10e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    10e8:	b9 84       	ldd	r11, Y+9	; 0x09
    10ea:	c8 84       	ldd	r12, Y+8	; 0x08
    10ec:	df 80       	ldd	r13, Y+7	; 0x07
    10ee:	ee 80       	ldd	r14, Y+6	; 0x06
    10f0:	fd 80       	ldd	r15, Y+5	; 0x05
    10f2:	0c 81       	ldd	r16, Y+4	; 0x04
    10f4:	1b 81       	ldd	r17, Y+3	; 0x03
    10f6:	aa 81       	ldd	r26, Y+2	; 0x02
    10f8:	b9 81       	ldd	r27, Y+1	; 0x01
    10fa:	ce 0f       	add	r28, r30
    10fc:	d1 1d       	adc	r29, r1
    10fe:	0f b6       	in	r0, 0x3f	; 63
    1100:	f8 94       	cli
    1102:	de bf       	out	0x3e, r29	; 62
    1104:	0f be       	out	0x3f, r0	; 63
    1106:	cd bf       	out	0x3d, r28	; 61
    1108:	ed 01       	movw	r28, r26
    110a:	08 95       	ret

0000110c <_exit>:
    110c:	f8 94       	cli

0000110e <__stop_program>:
    110e:	ff cf       	rjmp	.-2      	; 0x110e <__stop_program>
